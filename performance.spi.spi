#stop

#bitsea_on :cs4

bitsea_cc motion: 0.10  #╟▓▓▓▓▓▓▓▓▓▓▒░╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╢
bitsea_cc octave: 0.55  #╟▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╢
#bitsea_cc formant: 0.30 #╟▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╢
invcol 0.0
#electric

live_loop :go do
  tick
  #dcam1
  score=(ing
    [:b2 :d4 :fs3]  [:e4]
    [:fs2 :a4 :cs3] [:a4]
    ).look
  #invcol 1.0
  #callstack score[0], 60
  score.each_tick(:in){|n|
    #bitsea n,2.0*(ing 80 70 85 70).look(:in), mode: 0, cutoff: 1.0, sus: 2.5
  }

  if score.length > 1
    at{sleep 1/8.0*3
     # exception score[0], atk: 0.01, form: 1.0
      sleep 1/8.0*3
     # exception score[0], atk: 0.01, form: 1.0
    }
  #alive spike: 0.9
    #null score[0],100, sus: 2
  end

  #viz :alive, x: 1.0+rand
#  bitsea :A2
  #verb_slice Drip[/effect/].look if spread(1,3).look
  #alive light: rand*0.1
  alive motion: 0.8
  #alivecol 0.2
  16.times{tick(:k);
    k=(ing
      [KT[1]] _ _ _  K1 _ T1 _
      K1 _ _ _       K1 _ T1 _
      K1 _ _ _       K2 _ T1 _
      K1 _ _ _       K2 _ T1 _

#      K1 _ _ _       _ _ _ _          K3 _ _ _   _ _ _ T1
#      K1 _ _ _       %l{TC[6]} _ _ _  K3 _ _ _   _ _ _ T1
      #      K1 _ _ _       _ _ _ _          K1 _ %l{TC[6]} _   _ _ [F1 0.99] _)
      )
    puts k.look(:k)
    #k=k.map{|cell| look(:k) % 32 == 0 ? cell : _}
    #focus if k
    #kick_machine x=k.look(:k), def: 8, accent: 2
    #dterrain 0.5 if x
    #delectric 50
    #zero_x
    sleep 1/8.0
  }
  #sleep 2
end

#zero_on :fs4


live_loop :glitch, sync: :go do
  tick
  p=(ing
    _ _ _ _                _ _ _ _
    _ _ _ _                _ _ _ _
    [TS[49]] _ _ TS[12]    _ _ _ _

    _ _ _ _                _ _ _ _
    _ _ _ _                _ _ _ _
    TS[7] _ _ _            _ _ _ _

    _ _ _ _                _ _ _ _
    _ _ _ _                _ _ _ _
    TT[49] _ _ TS[12]      _ _ _ _

    _ _ _ _                _ _ _ _
    _ _ _ _                _ _ _ _
    TS[7] _ _ _            _ _ _ _
    )

  p=p.look
  #p=_
  fx=:lpf
  accent = (ing 0.2 0.2 0.3 0.5).look
  attack = 0.0
  r = 1.0
  if p && p.is_a?(Array)
    p = p[0]
    accent=accent*1.5
  end
  if p
    with_swing(0.01) do
      with_fx(fx, phase: (ring 1/4.0,1/4.0,1/8.0).look){
#        dviz :glitch, color: (line 0.0, 1.0, 8).look
#        dviz :sea, height: rand
        at{
          sleep 0.5
          viz :sea, noise: 1.0
          sleep 0.125
          viz :sea, noise: 0.001

          }
        smp p, amp: 3*accent, rate: r, attack: attack
      }
    end
  end
  sleep 1/8.0
end


live_loop :By_the_light_of_the_terminal, sync: :go do
  with_fx :echo, mix: ring(0.025+rand*0.1,0.055+rand*0.1,0.03,0.02,0.01).look, phase: ring(1/4.0, 1/8.0).look do
    #unity "/postfx/color",0.0
    verb_slice Drip[/effect/].look,amp: 0.1 if spread(1,3).look
    8.times{tick;
      pp = (ing
        _ _ _ _    _ _ _ _     _ _ _ _    _ _ _ _
        _ _ _ _    _ _ D1 _    _ _ _ _   _ _ _ _
      ).look
      #pp=_
      #dterrain 0.5 if pp
      #smp_dust(pp, rate: rand(0.025), amp: 1.0)
      s1 = (ing
        _ 5   _ _   [5] _   _ _   _ _  _ _  5 _  _ _
        _ 5   _ _   [5] _   5 _   _ _  _ _  5 _  _ _
        _ 5   _ _   [5] _   _ _   _ _  _ _  5 _  _ _
        _ 5   _ _   [5] _   _ _   5 _  _ _  5 _  _ _
       )
      s2 = (ing
        _ _   _ _   [5] _   _ _   _ _  _ _  5 _  _ _
        _ _   _ _   [5] _   5 _   _ _  _ _  5 _  _ _
        _ _   _ _   [5] _   _ _   _ _  _ _  5 _  _ _
        _ _   _ _   [5] _   _ _   _ _  _ _  5 _  _ _
        )
      s3 = (ing
        _ _   _ _   [5] _   _ _  5  _  _ _  5 _  _ _
        _ _   _ _   [5] _   _ _  5  _  _ _  5 _  _ _
        _ _   _ _   [5] _   _ _  5  _  _ _  5 _  _ _
        _ _   _ _   [5] _   _ _  5  _  _ _  5 _  _ _
        )
      s=(knit s2,16*4,s3,16*4, s1,16*4).look
      #s=_
      #mt s.look, accent=(line 75, 85, 16*4).look, 100
      mt_cc morph: ((line 0.0, 1.1,16*16*2)+(line 1.1, 0.0, 16*16*2)).look
      s=(ing
        2 _ _ _  5 _ _ _    5 _ _ _      _ _ _ _
        5 _ _ _   _ _ _ _   5 _ [2] 3    _ [5] 5 5
        ).look
      accent=110
      #s=_
      if s
       # mt s, accent=120, 127
      end
      if (s=(ing
            [5] _ 5 _ 5 _ 5 _   5 _ 5 _ 5 [5] 5 _
            ).look)
        s=_
        #mt s,accent=(line 85,127,64).look, 120 if s
      end
      sleep 1/8.0
    }
  end
end
