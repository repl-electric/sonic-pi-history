live_loop :algo do
  with_fx :hpf,  cutoff: 60, mix:  ramp(0, 1, 256).tick(:fire) do
    tick

    if spread(1,4).look
#      smp Mountain[/subkick/,[1,1]].tick(:sample), cutoff: 135, amp: 2.0
#      shader :iBeat, rand
      if spread(1,32).look

      at do
        sleep 1/8.0*2
 #       smp Mountain[/subkick/,[1,1]].tick(:sample), cutoff: 135, amp: 0.25
        end
      end
    end

    if spread(1,8).look
      if spread(1,16).look
#        smp Dust[/snare/,[1,1]].tick(:sample), cutoff: 135, amp: 1.0
      else
 #       smp Dust[/snare/,[4,4]].tick(:sample), cutoff: 135, amp: 1.0

        end
#      smp Dust[/snare/,[8,7]].tick(:samp2le), cutoff: 135, amp: 0.6
    end

    with_fx(spread(7, 11).map{|s| s ? :echo : :reverb}.look, decay: 2, phase: 0.125, mix: 0) do
      fslice = e.slice(:Fs3).drop(1).look
#      smp fslice, amp: 6, rpitch:  ring(0).shuffle.look
    end

    fslice = e.slice(:Fs3).drop(1).reverse.look

    if spread(1,12).look
#      smp fslice, amp: 6, rpitch:  ring(12,-5,5).look, finish_offset: rand * 0.001
    end


    if fslice[:length] > 0.1
      synth :gpa, note:  knit( :Fs4,64,  :Cs5,64,
                              :Fs4,64,  :B4,64,
                                   #  :b4,64,   :fs4,64/2.0, :a4, 64/2.0
                              ).look, amp: 4.0, attack: 0.001, decay: fslice[:length], release: 0.001

      with_fx(:reverb, room: 0.6, mix: 0.4, damp: 0.5) do |r_fx|

        shader :iVertexCount, 100
                sample  ring(@slices["Fs4/8"][16],@slices["Fs4/8"][17],
                             @slices["Fs4/8"][18],@slices["E4/8"][15],
                             @slices["Fs4/8"][20],@slices["Fs4/8"][21]).shuffle.tick(:sop), pan:  line(-0.25,0.25, 256).look,
        cutoff:  ramp(50, 135, 256/2.0).tick(:sopit)



      end


    end


    if fslice[:length] > 0.1
      #smp fslice, cutoff: 100, finish_offset: 0.17
#      shader :decay, :iVertexCount, 1000000, 1000
    end

#    shader :decay, :iSpeed, 0.03, 0.0001
#    shader :decay, :iCircle, rand(100000)

    shader  :iR, rand*0
    shader  :iG, rand*0
    shader  :iB, rand*0
    shader :iWave, 0

#    smp fslice, cutoff: 135, amp: 5, finish_offset: spread(7,11).map{|s| s ? 0.1 : 0}.look# line(4, 6, 8).look


    sleep  knit(1/8.0, 32).look*4
  end
end