live_loop(:metro)do
  tick;
 # clock_midi
  cue("16") if look % 16 == 0
  cue("32") if look % 32 == 0
  cue("64") if look % 64 == 0
  midi_clock_tick #channel: 3, port: :iac_bus_1
  sleep 1
end

live_loop :music, sync: :metro do
  tick
  #sync "16"
  midi (ring [:A3,3], [:Cs3,3], [:B3, 3]).look[0], (0.01*127.0), sustain: 8.0, port: :iac_bus_1, channel: 9
  #bass :E2, sustain: 3
  #harp_cc phase: rand
#  sleep 3
  #  harp_cc phase: 1.0

  4.times{
    sleep 1

    #pitch wheel.

    #midi 108, 0
    #midi 109, 0
    midi_cc 110, 1
    midi_cc 111, 1



    #midi_cc (line 0, 127).look, 127,  port: :iac_bus_1, channel: 9
tick
    #midi_cc 1, 0,  port: :iac_bus_1, channel: 9
#    tick
  }

end

with_fx :reverb do
  live_loop :pattern, sync: :metro do
    stop
    tick
    #sync "16"
    c1 = Dust[/clap/,1]
    k1,k2,k3 = Frag[/kick/,9], Mountain[/subkick/,0], (knit Dust[/kick/,24],3, Dust[/kick/,25],3).look
    opts ||= {}
    opts[k1] = {amp: 0.5}
#    puts opts
    s=(ring *%W{
     k2 _ _ _   k1 _ _ _   k1 _ _ _
     k1 _ _ _   k1 _ _ _   k1 _ _ _

     k2 _ _ _   k1 _ _ _   k1 _ _ _
     k1 _ _ _   k1 _ _ _   k1 _ _ _

     k2 _ k2 _  k1 _ _ _   k1 _ _ _
     k1 _ _ _   k1 _ _ _   Fraz[/kick/].tick(:kicks) _ k2 _
  }).look
    smp eval(s), amp: (line 0.8, 1.0, 12*6).look

    p = Dust[/perc/,/conga/].look
    s=(ring *%W{
p _ _ _   _ _ p _
_ _ p _

_ _ p _   _ _ p _
_ _ p _
}).look
#  smp eval(s)#, cutoff: (line 80, 120, 6*4).look

    c = MagicDust[/HI_/, [54,55]].look
    if (s=(ring *%W{
_ _ _ _    _ _
_ _ _  _ _ _
_ _ _  _ _ _
_ _ _  _ _ _
}).look) != _
      smp eval(s)
    end

  c1 = MagicDust[/HI_/].look#, Dust[/clap/].look
  s=(ring *%W{
 _ _ _ _   c1 _ _ _   _ _ _ _   c1 _ _ _
 _ _ _ _   c1 _ _ _   _ _ _ _   c1 _ _ _

 _ _ _ _   c1 _ _ _   _ _ _ _   c1 _ _ _
 _ _ _ _   c1 _ _ _   _ _ _ _   c1 _ _ _
}).look
#  smp eval(s), amp: 2.0

 # = spread(7,11).map{|s| s ? :hit : :miss}
  s=(ring *%W{_ _ _ _   c2 _ _ _}).look
 # smp eval(s), cutoff: (line 80, 120, 128).look

  h,h2 = Fraz[/hat/,0],Frag[/hat/,6]

  s=(ring *%W{
_ _ h _                     _ _ h _
_ _ h _                     _ _ h _
_ _ h {path:h,amp:0.25}     _ _ h _
_ _ h _                     _ _ h _
_ _ h _                     {path:h2,amp:0.9} _ h _

}).look
#  smp eval(s)

  sleep 1/8.0
end
end
