bar= 1.0

live_loop :metro do
  cue :whole; cue :half;  cue :quarter; cue :eighth
  sleep bar/2.0
  cue :eighth
  sleep bar/2.0
  cue :quarter; cue :eighth
  sleep bar/2.0
  cue :eighth
  sleep bar/2.0
  cue :half; cue :quarter; cue :eighth
  sleep bar/2.0
  cue :eighth
  sleep bar/2.0
  cue :quarter; cue :eighth
  sleep bar/2.0
  cue :eighth
  sleep bar/2.0
end


live_loop :piano do |p_idx|;with_fx :level, amp: @piano_amp do
    use_synth :beep; use_synth_defaults amp: 0.2, attack: 0.0, release: 0.1, decay: 0.1
    #with_fx :reverb, room: 1.0, mix: 0.1  do
    with_fx :echo, phase: bar/2.0  do |r_fx|
      #sample pa_s, amp: 0.5, rate: (ring -1, 1)[p_idx]
      sync :quarter
      with_fx :level, amp: 0.3  do
        notes = deg_seq(*%w{:A3 1 _ _ _   :A4 1 _ _ _}) #4 1 1 4  _ _ _ _ 1112 _ _ _ _
        sleeps = (ring bar)
        bonus_note = deg_seq(*%w{:A3 1})[0]

        play(notes[0], amp: 1.2, attack: 0.09, release: 0.01, decay: 0.1 + rrand(0.0,0.15))
        sleep bar*3

        sync :quarter

        play notes[4], amp: 1.2, attack: 0.09, release: 0.01, decay: 0.1 + rrand(0.0,0.15)
        sleep bar*3

        sync :quarter

        play notes[8], amp: 1.1, attack: 0.09, release: 0.01, decay: 0.1 + rrand(0.0,0.15)
        sleep bar*3

        sync :quarter

        play notes[12], amp: 1.1, attack: 0.01, release: 0.01, decay: 0.1 + rrand(0.0,0.15) if notes[12]
        sleep bar

        if(p_idx % 2 == 0)
          with_fx :echo, phase: bar/4.0 do
            play bonus_note[p_idx], amp: 1.0, attack: 0.1, release: bar/8.0, decay: (bar/4)*2 if bonus_note[p_idx]
          end
        else
          play(notes[13], amp: 1.0, attack: 0.1, release: (p_idx % 4) == 0 ? bar/4.0 : 0.01, decay: (p_idx % 4) == 0 ? bar : 0.1) if notes[13]
        end

        sleep bar*2
      end
    end
  end
  p_idx+=1
end