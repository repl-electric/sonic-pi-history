["instruments","shaderview","experiments", "log"].each{|f| load "/Users/josephwilk/Workspace/repl-electric/live-coding-space/lib/#{f}.rb"}; _=nil;
#load_snippets("~/.sonic-pi/snippets/")
# d[-_-]b # # This is Sonic Pi and live coding music.       #
#   /█\     # We run code which controls synths and samples.#
#  .Π.       #############################################

#                -----------This is the log of activity--------->

#This is where we write our music code. When it flashes pink
#thats me telling it to run our code and change the music
with_fx(:reverb, room: 0.8, mix: 0.5) do
  live_loop :dark_beginnings do
    with_synth :dark_sea_horn do #This is my own synth
      play (ring :As3, :Cs3, :Fs3).tick(:notes), decay: 8.01, cutoff: 61, amp: 0.3
    end
    #    sample Mountain[/bow/, /g#/, 1], cutoff: 65, amp: 0.5
    sleep 8
  end
end

live_loop :more_light do
  #This is a wrapper around a synth + fxs + useful params
  # i_hollow((ring :Cs4, :Es3, :as3).tick, amp: 0.1,
  #          cutoff: rrand(80,90))
  sleep 4
end

live_loop :strange_light do
  16.times{sleep 0.25}
  i_deter(deg_seq(%w{fs4 1}).stretch(3).tick,
          deg_seq(%w{fs4 1}).stretch(3).tick,
          amp: 0.8*0.3,
          damp_time: 0.25*8.0)
end

live_loop :dsaws_make_me_happy do
  sync :dark_beginnings
  with_synth :dsaw do
    play (ring :Fs2, :As2, :B2).tick(:notes), cutoff: 53, decay: 8.0, amp: 0.0, attack: 1.0, detune: dice(6) > 3 ? 12 : 5
  end
  with_synth :prophet do
    play (ring :Fs2, :As2, :Ds2).tick(:notes), cutoff: 58, decay: 8.0, amp: 0.0, attack: 1.0
  end

  sleep 8.0
end

live_loop :determinisim do
  pan_pick = [0.25,-0.25].choose
  if spread(3,8).tick
    sample Ether[/noise/,[0,1,0,7]].tick(:sample),
      cutoff: range(40,70,5).tick(:cut), amp: 0.8, pan: pan_pick
  end
  sleep 0.25 #0.25 of a beat.
end

live_loop :heart do
  #A nice way to turn one drum into many.
  sample Vocals[/breath/, [6,6]].tick(:breath), cutoff: 50, start: rand, rate: -1
  with_fx(:echo, decay: 0.25, phase: 0.25) do
    sample Mountain[/subkick/,[0,0,0,1]].tick(:sample),
      cutoff: range(50,70, 5).tick(:a_cutoff), amp: 0.5
  end
  sleep 1
  with_fx(:reverb, room: 1.0, mix: 0.5, damp: 0.5) do
    with_fx(:bitcrusher, bits: (range 6, 16,1).tick(:bits), mix: 0.2) do
      sample Frag[/snap/,[0,0,0,1]].tick(:sample), cutoff: rrand(60,70), amp: 0.9
    end
  end
  sleep 1
end