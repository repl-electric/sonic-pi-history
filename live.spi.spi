live_loop(:metro)do;tick;sleep 1;end


live_loop :melo, sync: :metro do
  #  tick
  pat = *%W{A3 D3 E3
            Fs3 A3 D3
            A3 D3 E3
            E3 Fs3 D3
            _  A2 B2}.count

  score = thirds(pat, true)
  cue(:m) if (look % (score.count-1)) == 0
  3.times{
    dshader :iMode, 0
   # dshader [:iR,:iG,:iB].choose, rand*9
    harp s=score.tick, 1*(ring 20,20,20, 30,40,40, 40,60,80).look
    #zero s[0]

    if(spread 1,6).look
      sharp s
    end

    sleep 3#s[-1]
  }
  sleep 3/4.0
end


harp :A1, sustain: 12

v1 = "/Users/josephwilk/Dropbox/repl-electric/samples/beauty_and_practical.wav"#Word#Tech[/vocal/,12]
#smp eval(voice.look), finish: 0.5, start: 0.3, rate: 1.0, amp: 0.25
#smp eval(voice.look), finish: 0.40, start: 0.2, rate: 0.125, amp: 1.5









live_loop :kick, sync: :metro do
  tick
  #sync :m
  k1,k2=Frag[/kick/,9],Frag[/kick/,13]
  if(s=(ring *%W{k2 _ {path:k1,amp:0.4} _   _ _ _ _   k1 _ _ _   _ _ _ _
                 k2 _ _ _    _ _ _ _    k1 _ _ _    _ _ _ _
                 k2 _ _ _    _ _ _ _    k1 _ _ _    _ _ _ _
}).look) != _
   # puts eval(s)
    smp eval(s), v:1.5
  end

    h1,h2 = (knit @slices["Fs3/4"][8],1, @slices["A3/4"][1],2).look,  @slices["B3/4"][1]
  s1 = Mountain[/microperc/,5]
  if (s=(ring *%W{_ _ _ _   s1 _ _ _   s1 _ _ _   _ _ _ _
                  _ _ _ _   s1 _ _ _   _ _ {path:h2,amp:0.9} _   _ _ _ _
}).look) != _

 #   puts ♥️.slice("A4/4").look
#    smp ♥️.slice("Fs3/4").look
    smp eval(s)
  end

  sleep 1/8.0
end

live_loop :thing, sync: :metro do
  tick
  #sync :m
  #smp Corrupt[/loop/,/beat/,/120/,6], slice: (ring *1..12).look, amp: 2
  sleep 1/8.0
end

live_loop :bass, sync: :metro do
  #stop
#  sync :m
#  tick_reset
  tick
#  [:E2,3], [:D2,3],[:B1,3],
 # [:FS2,3],
#  [:A2,3],
#  [:Gs2,1],
#  [:D2,3],
#  [:Cs2,2],
#  [:B1,1],
#  [_,1.0], #ODD timing

  bass s=(ring
    [:E2,3]  ,   [:D2, 3], [:B1,3],
    [:FS2, 3],   [:A2, 3], [:Gs2, 1],
    [:D2, 3] ,   [:Cs2,2], [:B1, 1],
    [_,1.0]

    ).look, 120, sustain: 3, cutoff: 1.0
  sleep s[-1]
end

live_loop :back, sync: :metro do
  #stop
  tick
  #shader :iMode, 0
#    dshader :iMode, (ring 1.0, 2.0,3.0).look
#    dshader [:iR,:iG,:iB].choose, rand*4
  #sharp (ring [:A3, 12], [:CS4, 12], [:E4, 12], [_, 12], [_,12]).look,10, sustain: 6
  #dshader [:iR,:iB,:iG], rand
  sleep 12
end
