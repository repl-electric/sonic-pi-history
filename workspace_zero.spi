
#load_snippets "~/.sonic-pi/snippets"
tick_reset_all
live_loop :metro do;tick;sleep(1);end
live_loop :harp do
   tick;cue :h if(look % 9 == 0)
   s = nil
#stop
  3.times{
   s = (knit
         [:A2, 1],3, [:Cs3, 1],3, [:B2, 1],3).tick(:no)
   harp s,(ring 20,20,20, 30,40,40, 40,60,80).look
   harp_cc(:cutoff, 0.4)
   harp_cc(:phase, 0.5)
   sleep s[1]
  }
#tick_reset_all
end
live_loop :drums, sync: :metro do
  #sync :h
  tick
  k1,k2 = Mountain[/subkick/,2],Frag[/kick/,9]
  h1,h2,h3 = (knit @slices["Fs3/4"][8],1, @slices["A3/4"][1],2).look,  @slices["B3/4"][0], Frag[/hat/,8]

  if (e=(ring *%w{k2 _ k1 _   _ _ _ _   k1 _ _ _  _ _ _ _
                  k1 _ _ _    _ _ _ _}).look) != _
    smp eval(e)
  end

  hat = (ring *%w{_ _ _ _ h3 _ _ _}) 
  hat2 = (ring *%w{_ _ _ _ h1 _ _ _
                   _ _ _ _ h1 _ {path:h2,amp:0.9} _
                   _ _ _ _ h1 _ _ _
                   _ _ _ _ h1 _ _ _})

  smp eval(hat2.look), amp: 0.5
  smp eval(hat.look), amp: 0.25

  

  sleep 1/8.0
end

live_loop :bass, sync: :metro  do
  tick
  bass (ring :a2, :cs3, :e3).look, 100, sustain: 3, cutoff: 0.35
  sleep 6
end
live_loop :soft, sync: :metro do
  tick
  s = nil
  3.times{
   s = (knit [:A3,12],1, [:Cs4,12],1, [:E4,12],1,  [_,12],1, [_,12],1).tick(:no)
   sharp s,(ring 10).look
   sleep s[1]
  }
end
