sop_on :A3, 20, sustain: 12
sop_mode -2
#musicbox :A3, sustain: 1
#sop_cc 1, 0
#sop_off :B3

midi_cc 65,  127*1  # port
midi_cc 114, 1
live_loop(:metro)do
  tick;
  cue("16") if look % 16.0 == 0.0
  cue("24") if look % 24.0 == 0.0
  cue("18") if look % 18.0 == 0.0
  cue("32") if look % 32.0 == 0.0
  cue("64") if look % 64.0 == 0.0
#  midi_start if tick == 0
#  midi_clock_beat 1.0, port: :iac_bus_1
  sleep 1.0
end

live_loop :moving, sync: :metro do
  #stop
  sync :music
  mega =
    (ring
    (ring #1/4     1/4.0
      [:D3, 1/8.0], [_, 1/8.0],   [:B2, 1/8.0], [_, 1/8.0],   #1/4
      [:D3, 1/8.0], [_, 1/8.0],   [:B2, 1/8.0], [_, 1/8.0],   #1/4

      [:D3, 1/8.0], [_, 1/8.0],   [:B2, 1/8.0], [_, 1/8.0],
      [:D3, 1/8.0], [_, 1/8.0],   [:B2, 1/8.0], [_, 1/8.0],
      ))

  sleep 3/4.0
  score = mega.tick(:mega)

  midi_cc 5, (ring 2,4).tick(:inside), port: :iac_bus_1, channel: 9
  puts "---------------------"
  score.count.times{ #-Every 8 switch
    tick
    s2 = ""
      #zero s2=(knit :D2,24,:Fs2,24,:Gs2,24).look,5 #might not get played.
      s = score.look
      #puts "#{s2}/#{s}"
      zero s,(line 100,0,9).look*0.5 if s && s[0]
      #zero s,(ring 120,20,20,20).look if s && s[0]
      #midi_pitch_bend 0.5, port: :iac_bus_1, channel: 9
      #puts score.map{|z| z[-1] }.reduce(:+) + 3/4.0
      sleep s[-1]
  }
end
