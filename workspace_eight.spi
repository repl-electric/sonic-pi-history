set_volume! 1.0
use_bpm 120

live_loop :ass do
tick
stop
form :fs6, sustain: 4.0
sleep 1/2.0
form :fs6, sustain: 5.5
sleep 1/2.0
form :a5, sustain: 1.0
sleep 2  
form :gs5, sustain: 1.0
sleep 2 
form :a5, sustain: 1.0
sleep 2 
form :gs5, sustain: 1.0
sleep 2 
form :a5, sustain: 1.0
sleep 2 
form :cs5, sustain: 6.0
sleep 2 
form :e5, sustain: 1.0
sleep 2 
form :e5, sustain: 1.0
sleep 1 
end

live_loop :dust, sync: :ass do
stop
  sync :ass
  tick
  #smp Mountain[/subkick/,1], cutoff: rand_i(110..135), start: rand(0.00125)
  #smp Corrupt[/loop/,/120/,/beat/,0]#, cutoff: 135, slice: (line, 0,16,32).reverse.look
  #sleep 16
end

#live_loop :two do
#  tick
  #form 54,0#, channel: 16
#  sleep 2.0#*2
#end

#set_volume! 0

live_loop :mixer do
  use_real_time
  data = (sync "/midi/midi_fighter_twister/2/1/control_change")
  set_volume! data[-1]/127.0 if data[0] == 33
#sleep 1
end

live_loop :testingzzz do
  tick
stop
puts "HIT"
  smp Mountain[/subkick/,0], amp: 2.9

#5 - 4 - 2 - 6 - 1 - 7 - 4 - 3
 play      (ring chord_degree(:i,   :A2, :major),
                 chord_degree(:ii,  :A2, :major), 
                 chord_degree(:iii, :A2, :major), 
                 chord_degree(:iv,  :A2, :major), 
                 chord_degree(:v,   :A2, :major), 
                 chord_degree(:vi,  :A2, :major), 
                 chord_degree(:vii, :A2, :major), 

).look, sustain: 3
uncomment do
 midi (ring chord_degree(:i,   :A2, :major)[0],
            chord_degree(:ii,  :A2, :major)[0], 
            chord_degree(:iii, :A2, :major)[0], 
            chord_degree(:iv,  :A2, :major)[0], 
            chord_degree(:v,   :A2, :major)[0], 
            chord_degree(:vi,  :A2, :major)[0], 
            chord_degree(:vii, :A2, :major)[0], 

            chord_degree(:i,   :A3, :major)[0],
            chord_degree(:ii,  :A3, :major)[0], 
            chord_degree(:iii, :A3, :major)[0], 
            chord_degree(:iv,  :A3, :major)[0], 
            chord_degree(:v,   :A3, :major)[0], 
            chord_degree(:vi,  :A3, :major)[0], 
            chord_degree(:vii, :A3, :major)[0], 


).look,0, sustain: 3, channel: 5
end
sleep 4
end
live_loop :clock do  # Create a live loop which continually sends out MIDI clock
  midi_clock_beat    # events at the current BPM
  sleep 1
end
live_loop :moooo do
  #harp :Fs2
  #midi_stop port: :iac_driver_iac_bus_1, channel: 5
  #midi_note_off :FS3,127, port: :iac_bus_1, channel: 5
  #bass :Fs3,100, sustain: 0
  #midi_poly_pressure :FS5, port: :iac_bus_1, channel: 5

  bass_x# :Fs3, sustain: 0
  #midi_note_off :*, port: :iac_bus_1, channel: 5
  #midi_note_off :e3, channel: 1, port: "foo"

  #midi_note_off port: :iac_driver_iac_bus_1, channel: 5
 # midi :FS3, (ring 20,20,20, 30,40,40, 40,60,80).look,  port: :iac_driver_iac_bus_1, channel: 3, sustain: 30
#  midi_all_notes_off port: :iac_bus_1, channel: 5
#          midi_reset channel: 5, port: :iac_bus_1

  8.times{tick;sleep 1;   
#midi_channel_pressure (ring 10,127).look, 
#midi_pitch_bend (line 0.0,1.0,8).look, port: :iac_bus_1, channel: 5
}
end

#stop_midi