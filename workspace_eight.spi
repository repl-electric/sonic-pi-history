bar = 1.0
use_bpm 60

live :indeterminism, amp: 1.0 do
  4.times{sync :next}

  with_fx(:distortion, mix: 1.0, distort: 0.8) do |fx_r|
    with_synth(:hollow) do
      play deg_seq(%w{Fs4 1 3}).tick, decay: bar*2, attack: 4, amp: 0.4, release: 1.0
    end
    notes = dice(6) > 3 ? deg_seq(%w{Fs3 1}) : deg_seq(%w{Fs4 1})
    with_fx(:reverb, room: 0.9) do
      with_synth(:dark_ambience) do
        play notes.tick(:note), decay: bar*6, attack: 1, amp: 1.0, release: 2.0
      end
    end

    4.times{
      sleep bar/4.0
      control fx_r, distort: (ring 0.8, 0.8, 0.5, 0.0).tick(:distory)
    }
  end

  4.times{sync :next}
  i_deter(deg_seq(%w{Fs4 1*7 _ 3*7 _}).tick,
          deg_seq(%w{Fs4 34 -5 4}).stretch(4).tick)
end


live_loop :next, amp: 1.0 do
  density(2) do
    sample Mountain["pebble",0], start: rrand(0.0,0.01), rate: 1.0, amp: 0.3
    sleep bar
  end
end

live_loop :melody do
  sync :next
  n = {1 => :Fs, 2 => :Gs, 3 => :As, 4  => :B, 5 => :Cs, 6 => :Ds, 7 => :Es}
      #I ii iii IV V vi  viio
  x = (1..7).map{|d| chord_degree(d, :Fs3, :major)}
  suses = (1..7).map{|d| chord(n[d], :sus2)  }

  start_notes = (knit x[0],1)
  end_notes   = (knit x[1],1)

  i_deter( start_notes.tick(:d), end_notes.tick(:e))
end

live_loop :bass do
  4.times{sync :next}
  i_bass((ring :B1, :Cs2, :Ds2).tick, amp: 0.5)
end