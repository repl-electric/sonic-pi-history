use_sample_bpm Fraz[/F#m/i, 0]

 @d = sample_duration(Fraz[/F#m/i, 0])

live_loop :beater do
   puts :cycle
   sample  Fraz[/F#m/i, 0],  amp: 4.0
   sleep 1
end

_=nil
live_loop :arp do
  sync :beater

128.times{                                                              
  with_synth :prophet do
   n = (knit 
         chord(:Fs3, ['m'].choose),     64,
         chord(:Fs3, ['m+5'].choose),   32,
         chord(:Fs3, ['m7+5'].choose, invert: -1),  16,
         chord(:A3, :sus2, invert: 0), 32,

         chord_degree(6, :Fs3, :minor, 3,  invert: -3)[0..2],8,
         chord_degree(6, :Fs3, :minor, 3,  invert: -3),24,
         chord_degree(6, :Fs3, :minor, 3,  invert: -4),32,

         chord_degree(3, :Fs2, :minor, 3,  invert: 1),64,
         chord_degree(4, :Fs2, :minor, 3,  invert: 2),32,
         chord_degree(7, :Fs2, :minor, 3,  invert: 1),32).tick(:pat)

        play (n.to_a) , amp: 1, release: 0.2, attack: 0.1, attack_level: 0.5
        c = (knit n[0],2, :r, 1,n[-1],2, :r,1, n[1],3).tick(:c) #.choose
        with_transpose(0) do
          synth :plucked,  note: (ring c, _).tick , amp: 2.0, attack: 0.01
        end
  end
  sleep @d/128.0
}
end