live_loop(:metro)do;tick;sleep 1;end

live_loop :melo, sync: :metro do
  #tick_reset
#  tick
  score = (knit
    [:A3, 3/4.0],3, [:D3,1.0],3, [:E3,2/4.0],3,
    [:FS3,3/4.0],1, [:A3,1.0],1, [:D3,2/4.0],1,
    [:A3,3/4.0],1,  [:D3,1.0],1, [:E3,2/4.0],1,
    [:E3,3/4.0],1,  [:Fs3,1.0],1, [:D3,2/4.0],1,
    [_,3/4.0],1,    [:a2,1.0],1, [:b2,2.5],1,
    )


#  puts score.count

  score = space(%W{A3 D3 E3
                   FS3 A3 D3
                   A3  D3 E3
                   E3  Fs3 D3
                   _   A2 B2
})




  #puts score
  puts (score.count)
  puts look % 22
  if (look % (score.count)) == 0
#    puts "----------------------"
    cue(:m)
  end
  3.times{
    s=score.tick
    harp s, 4*(ring 20,20,20, 30,40,40, 40,60,80).look
    #harp_cc(phase: 0.5, cutoff: 0.7)

    if (spread 1,6).look
      at {
        sharp s, 30
        sleep 0.5
#        sharp score.look(offset:2), 35
        sleep 0.5
        }
    end

    sleep s[-1]
  }
  sleep 3/4.0
end

live_loop :bazz, sync: :metro do
  tick
  #sync :m
  #tick_reset
  s=(ring
    [:E2, 3],  [:D2,3],   [:B1,3], #EDB
    [:FS2,3], [:A2, 3],  [:GS2,1],
    [:D2, 3], [:Cs2, 2], [:B1,1], [_,1.0],

    [:E2,3],  [:D2,3],   [:Fs2,3],
   [:GS2,3], [:A2,3],   [:E2,1],
    [:D2,2],  [:Cs2, 0.5],[:E2, 0.5],
    [:A1, 4.0]
    ).look
  if s[0] == :A1
    midi :A2,  port: :iac_bus_1, channel: 6, sustain: 3
    #midi s[0], port: :iac_bus_1, channel: 6, sustain: 3
  else
    bass s, 100, cutoff: 0.85, gain: 0.1, sustain: 3
  end

  puts "IN BASEE:#{s[-1]}"
  sleep s[-1]
end

live_loop :kick, sync: :metro do
  tick

  k1,k2 = Frag[/kick/,9], Mountain[/subkick/,0]

  if (s=(ring *%W{k1 _ k2 _   _ _ _ _   k2 _ _ _   _ _ _ _
                  k1 _ _ _   _ _ _ _

}).look) != _
    smp eval(s), amp: 1.4
  end

  h1,h2,h3 = Frag[/hat/,8], Frag[/hat/,9],  Frag[/hat/,7]

  if (s=(ring *%W{_ _ h2 _}).look) != _
    smp eval(s), amp: 0.3
  end

  if (s=(ring *%W{_ _ h1 _
                  _ _ h1 {path:h2,amp:0.25}
                  _ _ h1 _
                  _ _ h1 _
 _ _ h1 _
_ _ h1 _
}).look) != _
    smp eval(s), amp: 0.3
  end

  sleep 1/8.0
end

live_loop :high, sync: :metro do
  tick
  #sharp (ring :A3, :Cs3, :E3,_,_).look, sustain: 6
  shader :iMode, (ring 1.0, 2.0,3.0).look
  sleep 12
end
