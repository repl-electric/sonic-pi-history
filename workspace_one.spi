_ = nil
@polyrhythm = [3,2]

live_loop :bass do
  sync :foo
  bowed_s "/Users/josephwilk/Dropbox/repl-electric/samples/Bowed\ Notes/F\#_BowedGuitarNote_01_SP.wav"
end

def bowed_s(name)
  s = Dir["/Users/josephwilk/Dropbox/repl-electric/samples/Bowed\ Notes/*.wav"]
  s.sort!
  sample (if name.is_a? Integer
    s[name]
  else
  s.select{|s| s =~ /#{name}/}[0]
  end)
end
def live(name, opts={}, &block)
  idx = 0
  amp = if(opts[:amp])
    opts[:amp]
  else
    1
  end
  x = lambda{|idx|
    with_fx :level, amp: amp do
      block.(idx)
  end}
  live_loop name do |idx|
    x.(idx)
  end
end



live_loop :foo do
  density(@polyrhythm.sort.first) { play degree(1, :FS3, :major); sleep 1 }
end

live_loop :bar, autocue: false do
  sync :foo
  density(@polyrhythm.sort.last) { play degree(3, :FS3, :major); sleep 1 }
end