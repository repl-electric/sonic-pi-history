set_volume! 0.25
_= nil
live_loop :apeg do
  note = (knit chord(:Ds3, 'm'),32, chord(:Gs3, 'm'),32, chord(:Fs3, 'M'),32).tick
  high = note.choose

  with_synth(:dark_ambience) do
    play note[0], attack: 1.0, release: 1/4.0
  end

  with_synth(:prophet) do
    c = (knit 80,7, 85, 1).tick(:cut)

    with_fx((knit :none, 3, :reverb, 1, :none, 4).tick(:fx), room: 0.8) do
      with_transpose(12) do
        play high, amp: 0.5, cutoff: c, release: (c == 90 ? 1.5 : 1.0)  
      end
      play note.to_a - [high], amp: 1.0, cutoff: 70, release: (c == 90 ? 1.0 : 1.0)
    end

    with_synth(:beep) do
      with_transpose(-12) do
        play (knit note[0], 7, _,1).tick(:bass), decay: (1/4.0)*6, amp: 0.2
        with_transpose(-12) do
          play (knit note[0], 7, _,1).tick(:bass), release: 0.1, attack: 0.1, amp: 0.3
        end
      end
    end
  end
  sleep 1/4.0
end

live_loop :kicker do
  4.times{sync :apeg}
  with_fx((knit :none, 3, :echo, 1).tick(:fx)) do
    sample :drum_heavy_kick, amp: 0.5
  end
  4.times{sync :apeg}
  sample :sn_dolf, amp: 0.5
end

live_loop :hats do |m_idx|
  m = [0.1,0.2,0.3,0.4].choose
  with_fx(:reverb, mix: m, room: 0.3) do
    with_fx(:slicer, phase: 0.025, probability: 0.5, mix: m) do
      if(m_idx % 16 != 2)
        sample :drum_cymbal_pedal, amp: 0.2, start: rrand(0.0, 0.1)
      else
        sample :drum_cymbal_soft, amp: 0.1, start: rrand(0.0,1.0)
      end
    end
  end
  sync :apeg
  m_idx += 1
end