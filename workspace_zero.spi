
#load_snippets "~/.sonic-pi/snippets"
tick_reset_all
live_loop :metro do;tick;sleep(1);end
live_loop :harp do
   tick;cue :h if(look % 9 == 0)
   s = nil
#stop
  3.times{
   s = (knit
         [:A2, 1],3, [:Cs3, 1],3, [:B2, 1],3).tick(:no)
   harp s,(ring 20,20,20, 30,40,40, 40,60,80).look
   harp_cc(:cutoff, 0.4)
   harp_cc(:phase, 0.5)
   sleep s[1]
  }
#tick_reset_all
end
live_loop :drums, sync: :metro do
  #sync :h
  tick
  k1,k2 = Mountain[/subkick/,2],Frag[/kick/,9]
  h1,h2,h3 = (knit Scape[/hat/,6],1).look,Scape[/hat/,11],Frag[/hat/,15]
  if (e=(ring *%w{k2 _ k1 _   _ _ _ _   k1 _ _ _  _ _ _ _
                  k1 _ _ _    _ _ _ _}).look) != _
    smp eval(e)
  end

  if(ring *%w{1 _ _ _   _ _ _ _  
              1 _ _ _   _ _ _ _}).look != "_"

    smp Scape[/snare/,38], finish: 0.0125
#    smp "/Users/josephwilk/Workspace/music/samples/melodyne/coil/#{knit("f#",4,"d",2,"e",2).tick(:snare)}.wav", start: line(0.0, 0.0005,1024).look, finish: line(0.01, 0.06,32).look, amp: 1.25
#    smp Fraz[/coil/,38], amp: 1.0, finish:  line(0.01, 0.06,32).look, start: line(0.0, 0.0005,1024).look, rpitch: 12*-2, pan: (line 0.125,-0.125,32).look
  end

  hat = (ring *%w{_ _ h1   _ _ _}) 
  hat2 = (ring *%w{_ _ _ _ _ _ _ _
                   _ _ _ _ h2 _ {path:h3,amp:0.5} _
                   _ _ _ _ _ _ _ _
                   _ _ _ _ h2 _ _ _})
  smp eval(hat.look), amp: 0.35
  #smp eval(hat2.look)
 

  sleep 1/8.0
end

live_loop :bass, sync: :metro  do
  tick
  bass (ring :a2).look, 100, sustain: 3, cutoff: 0.7
  sleep 3
end
live_loop :soft, sync: :metro do
  tick
  s = nil
  3.times{
   #s = (knit [:A3,12],1, [:Cs4,12],1, [:E4,12],1,  [_,12],1, [_,12],1).tick(:no)

   s = (knit [:A3,1/2.0],1,[:A3,1/2.0],1,[:A3,1/2.0],1, [_,1],1,[:E3,2],1,[:E3,2],1).tick(:no)
   sharp s,(ring 20).look
    midi s[0], port: :iac_bus_1, channel: 1 
   sleep s[1]
  }
end
