["log","experiments", "shaderview"].each{|f| load "/Users/josephwilk/Workspace/repl-electric/live-coding-space/lib/#{f}.rb"}
shader("texture", "tex16")



live_loop :coils do
  #play (ring chord("Cs3", "M7"), chord("Fs3", "M")).tick(:chords) , release: 8, attack: 4.0
  synth :dark_ambience, note: (ring :Es1, :Fs1).tick, release: 8, attack: 4.0, amp: 2.5
sample Mountain[/subkick/,0]
  shader("decaying-uniform", "iKick", 1.0, 0.005)
  11.times{sync :apeg}
  shader("decaying-uniform", "iBeat", 0.5, 0.001)
  (32-11).times{sync :apeg}
  sample Ether[/coil/i, /f#/i], amp: 3.0
end

shader("texture", "/Users/josephwilk/Workspace/repl-electric/stars/resources/textures/tex16.png")



live_loop :apeg do
  use_synth :saw
  root = (knit :Fs3, 16, :As3, 16, :Ds3, 16,
          :Fs3, 16, :As3, 16, :Gs3, 16,
          :Fs3, 16, :As3, 16, :Es3, 16,
          :Fs3, 16, :As3, 16, :Cs3, 16
          ).tick(:notes)
  with_transpose(-24){
    with_transpose(-0){
      #with_synth(:dark_sea_horn){play (knit root,1, _, 15).tick(:bass), detune: 0 , attack: 0.001, release: 5.0, decay: 0.1, amp: 8.8}
    }
    sleep (0.25/2.0)
    #with_synth(:dsaw){play (knit root,1, _, 15).look(:bass), release: 1.5, decay: 2.5, amp: 0.8, cutoff: 70}
    #with_synth(:prophet){play (knit root,1, _, 15).look(:bass), release: 1.5, decay: 2.0, amp: 0.5, cutoff: 70}

    #sample Fraz[/coil/,4], amp: 1, cutoff: (ring 70,80).tick(:cu) if (knit root,1, _, 15).look(:bass)
  }
  sleep (0.25 * 1) - ((0.25)/2.0)
end