def octave_transform(chord)
  chord.map {|x| 60 + (x%12) }.sort
end

def t_matrix(chord_a, chord_b)
  z = octave_transform(chord_a).zip(octave_transform(chord_b))
  z.map {|a,b| b - a }
end

def voice_lead(chord_a, chord_b)
  a_leadings = chord_a.map {|x|
    [x, octave_transform(chord_a).index(60 + x%12)]
  }
  t_matrix = t_matrix(chord_a, chord_b)
  b_voicing = a_leadings.map {|x,y|
    x + t_matrix[y]
  }
  b_voicing
end

use_synth :saw

loop do
  [
    [60, 64, 67, 71-12],
    chord(:e, 'm7-5'),
    chord(:f, :major7),
    chord(:e, 'm7-5'),
    chord(:a, '7+5-9'),
    chord(:d, :minor7),
    chord(:d, :minor7),
    chord(:g, '7sus4'),
    chord(:g, '7')
  ].each_cons(2) do |a,b|
    if @last_c.nil?
      play a
      sleep 1
    end

    @last_c ||= a

    @last_c = voice_lead(@last_c,b)
    play @last_c
    sleep 1
  end
  @last_c = nil
end