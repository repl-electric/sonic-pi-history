load "/Users/josephwilk/Workspace/josephwilk/c++/sonic-pi/app/server/core.rb"

class SPVector < Hamster::Vector
  def pattern(*args)
    group_size = args.max

    # Scale patterns in music are 1 indexed
    args = args.map {|x| x - 1 }

    SonicPi::Core::RingVector.new(
      self.to_a.each_cons(group_size).map {|g|
        g.values_at(*args)
      }.flatten
    )
  end
end

live_loop :bar do
  use_synth :fm

  with_random_seed 7 do
    root = knit(:c, 32, :f, 16, :c, 16, :g, 16, :f, 16, :c, 32).tick(:root)
    notes = note_range(:g3, :c6, pitches: chord(root, :minor)).pattern(1,3,5,3,3,5,7,3)

    puts notes

    play notes.tick, release: 0.125
    sample :bd_ada, amp: 2 if spread(2,8).tick(:bd)
  end

  sleep 0.125
end