load_support('analog_in_the_digital'); use_bpm 127/2.0
live_loop(:unsyncable) do; sleep 1.0;end
#glitch_cc mode: 0



#vox_cc sync: 0, wet: 1.0, spray: 0.0

# D - 2 - E -2- Fs -1 - G                     D->G   5 sem
# F# -1- G -2- A -2-  B -1- C -2- D -2- E -2    F->B   5 sem   B->E          F->D#


#midi_cc 55, 0.9*127, port: :iac_bus_1, channel: 2
#vox_x :e3, 15
vox_cc semitone: 5, sync: 1
#vox_on :e3
stop

#stop
# 1 -> 5 -> 6 -> 4 -> 5 -> 6
#[:e3  :g4  :b3]
#[:b3  :ds4 :fs4]
#[:cs3 :e4  :gs3]
#[:a2  :cs4 :e3 ]
#[:b2  :ds4 :fs3]
#[:cs3 :fs4 :gs4]
#[:cs3 :e4  :gs5]

# puts scale(:e, :minor).map{|n| note_inspect(n)} #-           E F# G A B C  D  E5
# puts scale(:e, :harmonic_minor).map{|n| note_inspect(n)}  #- E F# G A B C  D# E5
# puts scale(:e, :melodic_minor).map{|n| note_inspect(n)}   #- E F# G A B C# D# E5


#vox :e3,127, sus: 4 #=> C3
#midi :fs3, sus: 4, channel: 10  # F# -1-  G -2- A -2- B -1- C -2- D -2- E -2-

#sleep 12
#stop

glitch_cc mode: 4
#vox_cc sync: 0, wet: 1.0, spray: 0.0

#stop
live_loop :form, sync: :unsyncable do
  tick
#stop
  score = (ing
    #P1
    # [:e3   :g4  :b3     :fs3]
    # [:e3   :g4  :b3      _]
    # [:e3   :g4  :b3     :fs3]


    # [:d3   :fs4  _      :a3]
    # [:g3   :b4   _      :d3]
    # [:a3   :c4   _      :e4]
    # [:a3   :c4   _      :e4]

    # [:a3   :c3   :fs4   :e4]
    # [:d3   :fs4  [:E4].choose :cs5]


    #P2
    [:e3    :g4    :b3   :fs3]
    [:e3    :g4    :b3   :fs3]         #cs

    # [:e3     _     :c4   :g3]
    # [:e3     _     :d4   :fs3]

    # [:d3   :fs3    :a2   :e3]
    # [:d3   :fs3    :b2   :g3]

    # [:g3   :b3    :c4   :d3]

    # [:fs3  :a3   :c4   :d3]
    # [:fs3  :a3   _     :e3]

    # [:g3  :b3    :g4   :g3]
    # [:g3  :b3    :a4   :g3]

    ).look
  puts score

  #glitch :C3, 85

  if score[0] == _
    #vox :e2, sus:2.0
  else
    with_transpose 12{
      #vox root(score), sus:2.0
    }
  end
  #end

  with_transpose 0{
    s = spread(3,4).look

    at{
      #bass root(score),120, sus: 2.5*2
      #midi :e3, channel: 4, sustain: 4, sus: 2
      sleep 3.0
      #midi :g5,127, channel: 4, sustain: 4, sus: 2
      #bass root(score)-5,115, sus: 0.5 if s
      sleep 0.5
      #bass root(score),105, sus: 0.5
      }
  }

  with_transpose 0{
    s = (ing
      [:fs3]
      ).look
    at{
      sleep 1.5
      s.each{|n|
        with_swing 0.02{
          #midi n, (ing 80 60 50).look,  sus: 0.25,  channel: 6# if spread(7,11).tick(:n1)
        }
        sleep 0.25
      }
    }
  }

  if true#(ing 1 1 0 0 1 1 1).look == 1

  #if (ing 1 1).look == 1
    #if (ing 1 1 0 1 1 1).look == 1
    #vox   score[0],  sus: 0.125         #0
    if (ing 1 0).look == 0
#      vox   score[0],  sus: 1.5         #0
    else
 #     vox2   score[0],  sus: 1.5         #0
    end
    #looper score[0],  sus: 1.5, pat: (ing 1/2.0 '1/2d').look#, elec: false, cutoff: (ramp 0.9, 1.0,256).tick(:hitit), abite: 0.0, bbite:  0.0, atk: 0.6, reverb: 1.0, creverb: 1.0
    #vox   score[1],     sus:3.5
    #vox  score[2], 80,  sus:1.5
    #vox  score[3], 80,  sus:3.5
    with_transpose 12{
      #piano score[1],62,sus:2
    }
    sleep 1/2.0

    sleep 1/2.0

    #piano score[1], 60, sus:2  if spread(1,2).look
    with_transpose 12{
      #piano score[1], 62, sus:2
    }


   # vox   score[3], 80,  sus: 2.5    # 3

    if (ing 1 0).look == 0
  #   vox   score[3], 80,  sus: 2.5    # 3
    else
   #  vox2  score[3], 80,  sus: 2.5    # 3

    end
    #looper score[3], 80,  sus: 2.5, pat: 1/8.0         #0

    sleep 1/2.0
    #glitch :f3, 60
    sleep 1/2.0

    #glitch :as3,50
    sleep 1/2.0

    #glitch :e3, 60+rand*5 if spread(1,2).look
    sleep 1/2.0
    #glitch :d3, 60+rand*5 if spread(1,2).rot(-1).look
    sleep 1/2.0

    #sop score[2], 50, sus:4    #2

    #glitch :fs3, 60+rand*5 if spread(2,3).look
    sleep 1/4.0
    #glitch :fs3, 70+rand*5 if spread(4,5).look
    sleep 1/4.0
  else
    vox score[0],       sus:2
    #vox score[1],       sus:1
    #vox score[2], 80,   sus:1
    with_transpose 12{
      piano score[1],82, sus:1
    }
    sleep 1/2.0
    with_transpose 12{
      piano score[1],60, sus:1
    }

    glitch :a3,40
    sleep 1/4.0
    sleep 1/4.0

    piano score[1],82, sus:1
    sleep 1/2.0
    glitch :C3, 50
    glitch :fs3,70
    sleep 1/4.0
    glitch :a3,127
    sleep 1/4.0
  end
end
