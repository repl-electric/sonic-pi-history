["experiments", "log"].each{|f| load "/Users/josephwilk/Workspace/repl-electric/live-coding-space/lib/#{f}.rb"}
set_volume! 1.0
_=nil
live_loop :arp do
  with_synth :prophet do
    n = (knit (chord :Ds3, 'm'),8,  chord(:Gs3,'m'),8,  chord(:Fs3 ,'M'),8).tick(:c)
    with_fx((knit :echo,4, :reverb, 1, :echo, 3).tick(:fx), decay: 1.0, phase: 1/4.0, room: 0.1) do
      c = n.choose
      with_transpose(12) do
        play (ring c, _).tick , amp: 0.3, release: 0.2, attack: 0.1, attack_level: 0.5
      end
      play (n.to_a - [c]) , amp: 1, release: 0.2, attack: 0.1, attack_level: 0.5
      with_transpose(-12) do
        play (ring n[0], _, _, _, _, _, _, _).tick(:bass), decay: (1/2.0)*6, release: 0.1, attack: 0.5, amp: 0.2
        with_transpose(-12) do
          play (ring n[0], _, _, _, _, _, _, _).tick(:look), decay: 0.1, release: 0.05, attack: 0.1, amp: 0.5
        end
      end
    end
  end
  sleep 1/2.0
end

live_loop :drum do
  1.times{sync :arp}
  sample :drum_heavy_kick
  1.times{sync :arp}
  sample :sn_dolf
end

live_loop :hats do |idx|
  sync :arp
  m = [0.3,0.2,0.1, 0.4].choose
  2.times{
    if idx %16 != 2+8
      with_fx(:reverb, room: 0.3, mix: m) do
        with_fx(:slicer, phase: 0.025, probability: 0.5, mix: m) do
          sample :drum_cymbal_pedal, start: rrand(0.0,0.1)
        end
      end
    else
      sample :drum_cymbal_soft, amp: 0.4
    end

  sleep 1/4.0}
  idx+=1
end