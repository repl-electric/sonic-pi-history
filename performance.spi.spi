ROOT="/Users/josephwilk/Workspace/repl-electric/adventures-in-algorhythm/you_fall_into_your_screen/support"; load "#{ROOT}/midi.rb";load "#{ROOT}/init.rb";use_bpm 127*0.5
#init!
#camlogo logo: 1, off: 1
#null :cs1, sus: 12
#bitsea_on :cs4
bitsea_cc motion: 0.15  #╟▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╢
bitsea_cc octave: 0.53  #╟▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╢
#bitsea_cc formant: 0.00 #╟▒░╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╢
electric 20
#invcol 0

#focus
live_loop :fall_into_your_screen, sync: :unsyncable do; tick
  #  corrupt :a0, motion: 0.8

  score=(ing
    [:a2, :cs4, :e3], Zz,
    [:cs2, :e4, :gs3], Zz,

    ).look
  score.each_tick(:in){|n|
    bitsea n, 1.0*(ing 80, 70, 85, 70,).look(:in), mode: 0, cutoff: 1.0, sus: 2.5
  }


  shard 0.1
  sleep 1
  sleep 1
end
live_loop :by_the_light_of_the_terminal, sync: :unsyncable do
  with_fx :echo, mix: (ring 0.025+rand*0.1,0.055+rand*0.1,0.03,0.02,0.01).look, phase: (ring 1/4.0, 1/8.0).look do
    8.times{
      tick
      pp=(ing
        _, _, _, _,    _, _, _, _,    _, _, _, _,   _, _, _, _,
        _, _, _, _,    _, _, D1, _,    _, _, _, _,   _, _, _, _,

        ).look
      smp_dust(pp)
      if pp
        dterrain (rand+0.5)*(ramp 0.5, 1.5, 1024).tick(:own)
      end
      mt mt_pat.look.look, accent=(line 75, 85, 16*4).look, 100
      mt_cc morph: ((line 0.0, 1.1,16*16*2)+(line 1.1, 0.0, 16*16*2)).look



      sleep 1/8.0
    }
  end
end
live_loop :its_all_just_text_in_a_file, sync: :unsyncable do; tick
  kick_machine k=(ing
    [KT[1]], _, _, _,  TS[8], _, _, _,  K3, _, _, _,   _, _, _, _,
    K1,    _, _, _,   _, _, _, _,      K3, _, _, _,   _, _, _, _,
    K1,    _, _, _,   %l{TC[6]}, _, _, _,      K3, _, _, _,   _, _, _, _,
    K1,    _, _, _,   _, _, _, _,      K3, _, %l{TC[6]}, _,   _, _, _, _,

    K1,    _, _, _,  TS[8], _, _, _,  K3, _, _, _,   _, _, _, _,
    K1,    _, _, _,   _, _, _, _,      K3, _, _, _,   _, _, _, _,
    K1,    _, _, _,   %l{TC[6]}, _, _, _,      K3, _, _, _,   _, _, _, _,
    K1,    _, _, _,   _, _, _, _,      K3, _, %l{TC[6]}, _,   _, _, _, _,
    ).map{|c| look % 64 == 0 ? c : _}.look, def: 8, accent: 1

  no{
    if k && spread(1,64).rot(0).look
      bitsea :fs4, sus: 4.0
    end
  }

  sleep 1/8.0
end
live_loop(:unsyncable) do; sleep 1.0 end
