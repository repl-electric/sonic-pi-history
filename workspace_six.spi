_=nil
with_fx(:distortion, mix: (ring 0.0, 0.0, 0.1, 0,1,  0.2,  0.2,  0.2, 0.4).tick(:dis)+0.1) do
  live_loop :patterings do
    #8.times{  sleep 0.25}
    with_fx(:lpf, cutoff: 135){
      with_synth(:plucked){
        use_random_seed 100
        notes = scale(:Fs2, :major_pentatonic, num_octaves: 2).drop(3).take(3).shuffle
        8.times{
          play (ring
                chord((knit :Gs4,8, :As4,8, :Ds4,8).tick(:asd), 'm').shuffle.choose, # :Fs3, :As3, :As3, :Cs3, :Es3,:Es4,
          ).tick(:a),  attack: (knit
                                0.1,3,4.0,1,
                                0.1,2,4.0,2
          ).tick(:att)*0.1, release: (knit 1.0,3,4.0,1,
                                      1.0,2,4.0,2
                                      ).tick(:re),
          decay: (knit 2.0, 7, 8.0, 1).tick(:r)*0.1,
          amp: (ring 1.0,0.9,0.8,0.8 ).tick(:amps)*0.5,
          cutoff: (rrand 60, 100)

          sleep (knit
                 0.25,1,
                 0.5,1,
                 0.125, 2,
                 0.5,1,


                 ).tick(:a)
    }}}


  end
end
["log","experiments", "shaderview"].each{|f| load "/Users/josephwilk/Workspace/repl-electric/live-coding-space/lib/#{f}.rb"}

with_fx(:lpf, cutoff: 100) do
  live_loop :highlight do
    16.times{sleep 0.25}
    with_transpose(0) do
      i_deter(deg_seq(%w{Fs4 1*3 3*3  5*3   1*3  3*3   5*3}).tick,
              deg_seq(%w{Fs4 3   5    6     3    5     2 }).stretch(3).tick, amp: 0.8*1,
              damp_time: 0.25*1.0)
    end
  end
end