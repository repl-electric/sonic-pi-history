#smp Mountain[/bowed/,/e_/,1]
#camlogo invert: 1.0, logo: 1.0, crazy: 1.0, off: 1.0

#bitsea_on :e3

bitsea_cc motion: 0.10  #╟▓▓▓▓▓▓▓▓▓▓▒░╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╢
bitsea_cc octave: 0.50  #╟▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╢
#bitsea_cc formant: 0.36 #╟▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╢
#electric
#invcol 0.0

live_loop :pi do
  stop
  tick
  score = (ing :D4)
  operator score.look
  sleep 1/2.0
  sleep 1/2.0
  sleep 1/4.0
end

zero_on :fs5

live_loop :go do
  tick
  score=(ing
    [:b2 :d4 :fs3]  Zz
    [:fs2 :a4 :cs3] Zz
    ).look
  #callstack score[0],30
  score.each_tick(:in){|n|
    bitsea n, 2.0*(ing 80 70 85 70).look(:in), mode: 0, cutoff: 1.0, sus: 2.5
  }

  exception score[0], atk: 0.5
  corrupt score[0]

  16.times{tick(:k)
    kick_machine x=(ing
      [KT[1]] _ _ _   _ _ _ _      K2 _ _ _   _ _ _ _
      K1      _ _ _   _ _ _ _      K2 _ _ _   _ _ _ T1
      K1      _ _ _   _ _ _ _      K2 _ _ _   _ _ _ T1
      K1      _ _ _   _ _ _ _      K2 _ %l{TC[6]} _   _ _ _ _

      [KT[1]] _ _ _   _ _ _ _      K2 _ _ _   _ _ _ _
      K1      _ _ _   _ _ _ _      K2 _ _ _   _ _ _ T1
      K1      _ _ _   _ _ _ _      K2 _ _ _   _ _ _ T1
      K1      _ _ _   _ _ _ _      K2 _ %e{TC[6]} _   _ _ _ _
      ).map{|cell| look % 16 == 0 ? cell : cell }.look(:k), def: 8, accent: 1.5
    sleep 1/8.0
  }

  verb_slice Drip[/effect/].look if spread(1,3).look
#  sleep 2
end

live_loop :breaths, sync: :go do
  with_fx :echo, mix: 1*(ring 0.025+rand*0.1,0.055+rand*0.1,0.03,0.02,0.01).look, phase: (ring 1/4.0, 1/8.0).look do
    8.times{tick;
      pp = (ing
        _ _ _ _    _ _ _ _    _ _ _ _   _ _ _ _
        _ _ _ _    _ _ D1 _    _ _ _ _   _ _ _ _
        ).look
      terrain 0.4 if pp
      smp_dust pp
      sleep 1/8.0
    }
  end
end




live_loop :glitch, sync: :go do
  tick
  p=(ing
    _ _ _ _                _ _ _ _
    _ _ _ _                _ _ _ _
    [TS[49]] _ _ TS[12]    _ _ _ _

    _ _ _ _                _ _ _ _
    _ _ _ _                _ _ _ _
    TS[7] _ _ _            _ _ _ _

    _ _ _ _                _ _ _ _
    _ _ _ _                _ _ _ _
    TT[49] _ _ TS[12]      _ _ _ _

    _ _ _ _                _ _ _ _
    _ _ _ _                _ _ _ _
    TS[7] _ _ _            _ _ _ _
    )

  p=p.look
  #p=_
  fx=:lpf
  accent = (ing 0.2 0.2 0.3 0.5).look
  attack = 0.0
  r = 1.0
  if p && p.is_a?(Array)
    p = p[0]
    accent=accent*1.5
  end
  if p
    with_swing(0.01) do
      with_fx(fx, phase: (ring 1/4.0,1/4.0,1/8.0).look){
        at{
          sleep 0.5
          viz :sea, height: 0.3
          viz :sea, noise: 10.0
          sleep 0.125
          dviz :sea, height: 0
          viz :sea, noise: 0.01
        }
        smp p, amp: 3*accent, rate: r, attack: attack
      }
    end
  end
  sleep 1/8.0
end
