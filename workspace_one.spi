["shaderview","experiments", "log"].each{|f| load "/Users/josephwilk/Workspace/repl-electric/live-coding-space/lib/#{f}.rb"}



live_loop :dark do
  sleep 8
  with_synth :dark_ambience do
    play (ring :Fs1, :As1).tick, decay: 8.0, detune1: 12, amp: 4.0, attack: 1.0, cutoff: 60
  end
end

live_loop :drums do
  with_fx(:echo, phase: 0.5, decay: 2.0) do
    sample Mountain[/subkick/,1], cutoff: 100
  end

  shader(:decay, :iBeat, rand+4.0, 0.001)
  shader(:decay, :iKick, 10.0)
  #shader(:decay, :iWave, 0.5, 0.003)
  sleep 1
  with_fx(:reverb) do
    sample Frag[/snap/,0], cutoff: 90
    shader(:decay, :iOffBeat, 1.0)
  end

  sleep 1
end

live_loop :what_are_we_doing_here do
  sleep 8
  with_synth :dark_sea_horn do
    shader(:decay,  :iWobble, 1.0)
    play (ring :Fs3, :As3, :Ds3).tick, decay: 8.0
  end
end
_=nil
live_loop :apeg do
  use_synth :saw
  root = (knit :Fs3, 16, :As3, 16, :Ds3, 16,
          :Fs3, 16, :As3, 16, :Gs3, 16,
          :Fs3, 16, :As3, 16, :Es3, 16,
          :Fs3, 16, :As3, 16, :Cs3, 16
          ).tick(:notes)
  with_transpose(-24){
    with_synth(:dsaw){play (knit root,1, _, 15).tick(:bass), release: 1.5, decay: 2.5, amp: 1.5, cutoff: 60}
    with_synth(:prophet){play (knit root,1, _, 15).look(:bass), release: 1.5, decay: 2.0, amp: 1.2, cutoff: 60}

    if (knit root,1, _, 15).look(:bass)
      #      sample Fraz[/coil/,4], amp: 1, cutoff: (ring 70,80).tick(:cu)
    end
  }
  sleep 0.25 * 1
end

with_fx(:lpf, cutoff: 100) do
  live_loop :highlight do
    16.times{sync :apeg}
    with_transpose(0) do
      i_deter(deg_seq(%w{Fs4 1*3 3*3  5*3   1*3  3*3   5*3}).tick,
              deg_seq(%w{Fs4 3   5    6     3    5     2 }).stretch(3).tick, amp: 0.8*1,
              damp_time: 0.25*1.0)
    end
  end
end

shader(:uniform, :iInvert, 0.0)
shader(:uniform,  :iWobble, 0.0)
#shader("uniform", :iMesh, 0.0)
shader("uniform", :iCells, 1.0)
shader("uniform", :iStars, 0.0)
shader("uniform", :iStarLight, 0.0)
shader(:uniform, :iSpaceMotion, 0.0)
shader(:uniform, :iDrop, 0.0)
shader(:uniform, :iCellCount, 0.0)
shader(:uniform, :iCellMotion, 0.0)

#shader("uniform", :iBeat, 3.05)
#shader("uniform", :iBeat, 0.0)