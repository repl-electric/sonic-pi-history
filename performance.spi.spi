load_support('analog_in_the_digital'); use_bpm 127/2.0
#init!
vox_cc sync: 1
#glitch_cc mode: 2
#bass_cc shape: 1, more: 1.0, wet: 0
#glitch_cc kick: 1
#bass_on :A3
#solo :piano

live_loop :form, sync: :unsyncable do
  tick
  score = (ing
    #P0
    # [:e3    :g3                :a3   :fs3]
    # [:fs3   [:g3 :a3].choose   :b3    :g3]
    # [:d3    :b3                :b3    :fs3]
    #[:e3    :g3                :d4   :fs3]

    #P1--------------------------------------

    [:e3    _                _    :fs3]
    [:e3    _                _    :fs3]
    [:fs3   _                _     :e3]
    [:b2    _                _    :fs3]

    #[:fs3   [:g3 :a3].choose   :b3   :g3]
    #[:d3    :b3                 _    :fs3]

    #P2-------------------------------------
     # [:e3    _   _      :g3]
     # [:e3    _   _      :fs3]
     # [:b2    _   _      :a2]
     # [:c3    _   _      :e3]
     #[:fs3   _   _      :e3]

#          [:e3 :g4  :b3 :g5]
#          [:e3 :fs4 :b3 :fs5]
#          [:b2 :d4 :fs3 :a5]
#          [:c3 :e4  :g4 :e5]
#          [:fs3 :a4 :c4 :e5]


#    [:b2    :d3  :b3   :fs3]


    #P3-------------------------------------

    # [:e3    :g3    :b3   :fs3]
    # [:e3    :g3    _     :fs3]

    # [:fs3   :g3    :b3   :g3]

    # [:e3     _     :c4   :g3]
    # [:e3     _     :e4   :fs3]

    # [:d3   :fs3    :a2   :e3]
    # [:d3   :fs3    :b2   :g3]

    # [:g3   :b3    :c4   :d3]

    # [:fs3  :a3   :c4   :d3]
    # [:fs3  :a3   _     :e3]

    # [:g3  :b3    :g4   :g3]
    # [:g3  :b3    :a4   :g3]

    #P4
    # [:e3    :g3    :b3   :fs3]
    # [:e3    :g3    _     :fs3]

    ).look
  #puts score

  voxe_cc semitone: 5
  no{
    d=[8,6].shuffle
    glitch_cc ldelay: d[0], cdelay: (knit 2,4,3,4).look, rdelay: d[1], wash: 0.25*(ing 1.0 0.0 1.0 0.0).look
    #glitch :C3, 85*1
    at{
      dice(32) > 16 ? sleep(4) : sleep(3)
      glitch_cc wash: 0.0
    }
  }

  s = spread(3,4).look
  w=(line 1, 0.5, 32).look
  #bass octave(score[1] || score[2] , 3), 120, sus: 2.5*2, wet: 1
  (look % 9 == 0) ? bass_cc(wet: 0.0, more: 0.5, shape: 0.8) : bass_cc(wet: 1.0, more: 0.2, shape: 0.5)
  if spread(1,2).look
    #bass_cc(wet: 1.0, more: 0.2, shape: 1.0)
    #bass (ing :e3 :e3 :d3 :d3 :g3 :fs3 :fs3 :g3 :g3).look, 120, sus: 8#1.5*2*2
  end
  #bass root(score), 120, sus: 1.5*2

  #midi :e3, channel: 4, sustain: 4, sus: 2
  at{
      sleep 1.0/2.0
      #sop_cc mode: 0
      #sop :b3, sus: 0.5
      sleep 2
      sleep 1.0/2.0
      #looper score[1],60
      #midi :g5,127, channel: 4, sustain: 4, sus: 2
      #bass root(score)-5,115, sus: 0.5 if s
      sleep 0.25
      #sop_cc mode: (ing 0 0 1  0 0 2  0 0 3  0 0 4  4 4 5).look
      #with_swing((line 0, -0.05, 32).look){
      #  sop score[0], sus: 0.5
      #}
      sleep 0.25
      #at{
      #  sleep 0.25
      #  2.times{
      #    sop_cc mode: 1
      #    sleep 0.5
      #    sop score[0]+12,(ing 60 70).tick(:ititit), sus: (ing 1.0 4.0).tick(:ssss)
      #  }
      #}
      #bass octave(score[-1],3),105, sus: 0.5, wet: w
  }

  #voxe_cc semitone: 5
  #glitch_cc kick: true
  #midi score[-1], 50, channel: 12, sus: 8 if spread(1,2).look
  if true
    yes{
      with_transpose 12*0{
        c = (ing
          [:e3 :g4  :b3 :g5]
          [:e3 :fs4 :b3 :fs5]
          [:b2 :d4 :fs3 :a5]
          #[:a3 :c4 :e4 :c4]

          [:c3 :e4  :g4 :e5]
          #[:fs3 :a4 :c4 :e5]
          #[:d3 :fs4 :a4 :fs5]
          ).look
        puts "piano solo: #{c}"

        # E F G A B C D
        #bass octave(root(score),4), 127, sus: 4, shape: 1.0, more: 0.2
        #midi (ing :e3 :fs3 :d3 :c4 # :c3 :D3
        #          :g3 :fs3 :b3 :c4 # :c3 :D3
        #      ).look, (ing 85 80 70 3).look, sus: 4, channel: 14

        with_transpose 12*1{
          looper c[1],  sus: 2.5, pat: (ing 1/2.0 '1/2d' 1/2.0 1/4.0).look, elec: false, cutoff: (ramp 0.2, 1.0,256).tick(:hitit), abite: 0.0, bbite:  0.1, atk: 0.6, reverb: 1.0, creverb: 1.0
        }

      c.each{|n|
          with_swing((line -0.04, 0.0, 32).look){
            piano n, 95, sus: 2
          }
        }
        z=spread(1,3).look
        at{
          sleep 1
          piano c[1],85, sus: 1/2.0 if z
          sleep 1
          piano c[1],86, sus: 1 if z
          sleep 1
          with_swing((line -0.04, 0.0, 32).look){
            piano c[1],80,sus: 1/2.0
          }
          sleep 1.0/2.0
          piano c[-1],90,sus:2
          sleep 1.0/2.0
          piano c[-1],80,sus:4
      }
      }
    }

    #sop_cc mode: 0
    sop_cc mode: (ing 0 0 0 6  0 0 0 8).look if spread(1,4).look
    #vox_cc sync: 0, wet: 0

    #bass_on :G4
    vox score[0], 30, sus: 1.5
    if (ing 1 0).look == 0
      #vox2  score[0],  sus: 1.5
    else
      #voxe  score[0],  sus: 1.5
    end

    with_transpose 12*0{
      #looper score[1],  sus: 2.5, pat: (ing 1/2.0 '1/2d').look#, elec: false, cutoff: (ramp 0.9, 1.0,256).tick(:hitit), abite: 0.0, bbite:  0.0, atk: 0.6, reverb: 1.0, creverb: 1.0
    }
    #midi score[0], 50, channel: 10, sus: 0.5 if spread(1,2).look
    sleep 1/2.0
    sleep 1/2.0

    piano score[1], 60+5, sus:2  if spread(1,2).look
    with_transpose 12{
      piano score[1], 62+5, sus:2
    }

    vox  score[3], 85,  sus: 2.5, detune: (ing 0.5 0.50).look

    if (ing 1 0).look == 0
      #vox2   score[3], 80,  sus: 2.5     # 3
    else
      #vox2  score[3], 80,  sus: 2.5    # 3
    end
    #looper score[3], 80,  sus: 2.5, pat: 1/2.0         #0

    sleep 1/2.0
    piano score[0], 60+5, sus:2  if spread(1,3).rot(-1).look
    #glitch :f3, 60
    sleep 1/2.0

    #glitch :as3,50
    piano score[-1]+12, 60+5, sus:2 if spread(1,2).rot(1).look
    sleep 1/2.0

    #glitch :e3, 60+rand*5 if spread(1,2).look

    sleep 1/2.0

    #with_transpose 12 {sop :e3, 40, sus: (ramp 0.25, 8.0, 64).tick(:f1) if spread(7,11).rot(-1).look }

    #with_swing 0.05{ glitch :d3, 60+rand*5 if spread(1,2).rot(-1).look }

    sleep 1/2.0
    piano score[-1]+12+5, 55+5, sus:2  if spread(2,2).rot(0).look

    #sop score[2], 1*(ing 5.5 10).look, sus: 4.0, more: false    #2

    #glitch :fs3, 60+rand*5 if spread(2,3).look
    sleep 1/4.0
    #with_swing -0.05{ glitch :fs3, 70+rand*5  if spread(4,5).look }
    piano score[0]-5, 60+5, sus:2  if spread(1,3).rot(-2).look
    sleep 1/4.0
    #stop
  elsif true
    #bass_x
    sop_cc mode: (ing 0 4 0 3).look

    fx wash: 0.0
    vox  :e3,   sus: 1.5
    vox_cc sync: 0, wet: 0.5, detune: 0.5, semitone: 5
    #vox_cc
    piano score[2],82, sus:2.5
    sleep 1/2.0

    at{
      sleep 0.5
      piano score[1], 62, sus:0.25
    }
    with_transpose 12{
      piano score[0],82, sus:1
    }

    glitch :a3,40
    sleep 1/4.0
    piano score[1],60, sus:1
    sleep 1/4.0
    vox  :b3, 45,  sus: 2.5
    vox  :d4, 50,  sus: 1.5

    piano :d5, 72, sus:1
    sleep 1/2.0
    glitch :fs3,30 if spread(1,2).look
    sleep 1/4.0
    piano score[-1]+12,82, sus:1
    #glitch :a3,45

    sleep 1/4.0
    sop :fs4, 40
    sleep 1

    with_transpose 12{
      piano score[1], 85, sus:0.25
    }

    #looper score[-2]+5, 80
    glitch :b4, 50
    sleep 0.5
    with_transpose 12{
      sop score[1], 85, sus:0.25
    }
    sleep 0.5
  end
end

live_loop :name, sync: :unsyncable do
  tick
  N = 1; H = 1/2.0; Q = 1/4.0; E = 1/8.0; S = 1/16.0
  score = (ing
    [:G3 Q]   [_ Q]
    [:A2 E]   [_ E]
    [:B2 E]   [_ E]
    [:A2 E]   [_ E+Q]

    [:B3 Q]   [_ Q]
    [:D3 E]   [_ E+Q]
    [:D3 Q] [_ Q]
    [[:D3 :G3 :E3].choose N [2,1].choose]
    )
  note = score.look
  yes{
    if note[0]
      #with_swing((line 0, -0.04, 8).look(:note)){
      #  with_transpose 12{
          #vox note[0],127, sus: note[-1]
      #  }
        #midi note[0], 0.65*(ing 100 127 50 60  85 95 110 120).tick(:note),  sus: note[-1],  channel: 1
      #}
    end
  }
  sleep note[1]
end

live_loop(:unsyncable) do; sleep 1.0;end
