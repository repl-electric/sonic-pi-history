live_audio :moog, input: 2
live_loop :testing do
  tick
  midi (ring :Gs3,32, :Cs3, 32, :E3, 32).look, 10, port: :iac_driver_iac_bus_1, channel: 2, 
    sustain: 0.8
  sleep 1
end
live_loop :iter, sync: :testing do
  tick
  s = (ring 1/2.0, 1/2.0,  # 1
            1/4.0, 1/4.0, 
            1/4.0, 1/4.0,  # 1 
            1/4.0, 1/4.0,
            1/4.0, 1/4.0).look
  midi (knit :E2,128, :A2, 128, :Cs3, 128).look, 1*(line 100, 127,128/1).look, port: :iac_driver_iac_bus_1, channel: 1,
  sustain: s*2.0
  sleep s #1/4.0  #7=> 2 beats
end
live_loop :harmony, sync: :testing do
  tick

  #E        A           C
  #G        C           E
#  play_midi (ring chord(:e2,  :M),
#                  chord(:a2,  :M),
#                  chord(:cs2, :m)
#).look, port: :iac_driver_iac_bus_1, channel: 5, sustain: 5.5
  sleep 6
end
live_loop :melody, sync: :testing do
  tick
  midi (ring 
         :e1,  :e2, :e3, :e4, :e5,      :e4,
         :a1,  :a2, :a3, :a4, :a5,      :a4,
         :fs1, :fs2, :fs3, :fs4, :fs5, :fs4
        ).look, 0*(line 0,127,127).look, port: :iac_driver_iac_bus_1, channel: 4, 
    sustain: (knit, 1,3, 1,3).look
  #midi :fs2, port: :iac_driver_iac_bus_1, channel: 4 
  3.times{
   s = (ring 3/4.0, 1, 2/4.0).tick(:note_length)
   midi (knit :A3,3, :D3,3,:E3,3, 
              :Fs3,1,:B3,1,:Cs3,1, 
              :E3,1, :Gs3,1, :b3, 1).look, (ring 50,60,80).look,  port: :iac_driver_iac_bus_1, channel: 3,
    sustain: s   
   sleep s#3/4.0
  }
   sleep 3/4.0
end
live_loop :bass, sync: :testing do
  tick
  #midi_reset
comment do  
midi (ring :a1, :a1, :a1,   :a1, :a1, :a1,
             :e2, :e2, :e2,:e2,
             :fs2, :fs2, :fs2,
  #           :cs2, :cs2, 
   #          :d2,  
    #         :e2,
     #        :a1, :a1,
 ).look, 
(ring 1,10,32).look*0, sustain: 1.0, port: "moog_minitaur"
end
  4.times{
  sleep 1/4.0
   #smp Mountain[/ice/,1],amp: 0.01
  #midi_pitch_bend 0.1, sustain: 1.0, port: "moog_minitaur"
  #midi_clock_tick port: :moog_minitaur
  }
end


#1/2.0, 1/2.0, 2/4 2/4   # 1
#1/4.0, 1/4.0, 2/4 
#1/4.0, 1/4.0, 2/4 #  1 
#1/4.0, 1/4.0, 2/4
#1/8.0, 1/8.0  2/8

live_loop :beat, sync: :testing do
  tick
  if(args=(ring *%W{1 0 0 0   0 0 0 0   0 0 0 0   0 0 0 0
                  }).look) != "0"
    puts args
    smp Mountain[/subkick/,0], amp: args =="1" ? 0.3+rand*0.1 : args
  end
  if (ring *%W{0 0 0 0   0 0 0 0}).look != "0"
    smp MagicDust[/_HI/,24], amp: 0.15, pan: (ring 0.25,-0.25).tick(:pan)
  end
  if (args=(ring *%W{
               0 0 0 0   0 0 1 0.05  0 0 0 0   0 0 1 0
}).look) != "0"
#    smp MagicDust[/_HI/,23], amp: args =="1" ? 0.1 : args
  end
  if (args=(ring *%W{
0 0 0 0   0 0 0 0
0 0 0 0   0 0 0 1}).look) != "0"
  #  smp MagicDust[/_MI/,48], amp: args =="1" ? 0.05 : args
  end
  if (args=(ring *%W{
0 0 0 0   1 0 0 0}).look) != "0"
   # smp Dust[/snare/,11], amp: args =="1" ? 0.125 : args
  end
  sleep 1/8.0
end
