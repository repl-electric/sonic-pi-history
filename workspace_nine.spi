541

def deg_seq(*pattern_and_roots)
  pattern_and_roots = pattern_and_roots.reduce([]){|accu, id|
    if(/^[\d_]+$/ =~ accu[-1] && /^[\d_]+$/ =~ id)
      accu[0..-2] << "#{accu[-1]}#{id}"
    else
      accu << id
  end}
  patterns = pattern_and_roots.select{|a| /^[\d_]+$/ =~ a.to_s }
  roots   = pattern_and_roots.select{|a| /^[\d_]+$/ !~ a.to_s}
  notes = patterns.each_with_index.map do |pattern, idx|
    root = roots[idx]
    if(root[0] == ":")
      root = root[1..-1]
    end
    s = /[[:upper:]]/.match(root.to_s[0]) ? :major : :minor
    if(s == :minor)
      s = if    root.to_s[1] == "h"
        :harmonic_minor
      elsif root.to_s[1] == "m"
        :melodic_minor
      else :minor
      end
    end
    root = root[0] + root[2..-1] if root.length > 2
    pattern.to_s.split("").map{|d| d == "_" ? nil : degree(d.to_i, root, s)}
  end.flat_map{|x| x}
  ring( *notes)
end


#play deg_seq(*%w{:a2 541})

#play chord_degree(5, :a2, :minor), release: 2
#sleep 2
#play chord_degree(4, :a2, :minor), release: 2
#sleep 2
#play chord_degree(3, :a2, :minor), release: 2
#sleep 2

#play chord_degree(1, :a2, :minor), release: 2
#sleep 2
#play chord_degree(6, :a2, :minor), release: 2
#sleep 2
#play chord_degree(5, :a2, :minor), release: 2

#165

  #  play_darkness deg_seq(*%w{:a2 13})[idx],bar
 #   idx+=1
#end;end
bar = 2

#play ring( chord_degree(1,:a2, s)[0..3],chord_degree(2,:a2, s)[0..3],chord_degree(3,:a2, s)[0..3],chord_degree(5,:a2, s)[0..3])[idx], release: 2

def play_darkness(n, bar)
 # with_synth(:tri){play n,  amp: 0.2, attack: 0.0, release: bar, decay: bar, sustain: bar/2}
  with_fx(:pitch_shift, pitch_dis: 0.01){with_fx(:reverb, mix: 0.5){with_synth(:prophet){ play n, cutoff: 60, amp: 3.0,  attack: 0.0, release: bar*4}}}
end

def play_rollinz(n, dir)
  use_synth :mod_fm  #:mod_fm # sample v_s, amp: 90
  use_synth_defaults detune: 0.05, sustain_level: 0.20, res: 1, env_curve: 7 ,sustain: 1.0, attack: 0.01, decay: 0.15, amp: 1.0, release: 0.5, attack_level: 0.8, mod_phase: 0
  with_fx :reverb, mix_slide: 0.2 do |r|
  with_fx :distortion, distort: 0.1, cutoff: 90 do |d|
      play n, attack: 0.001,  pan: 0.8*dir, detune: 0.001
end;end
end

live_loop :a do     |idx|play_darkness deg_seq(*%w{:A2 1    2    3    5    1    2    1    5   })[idx],bar;sleep bar*2;idx+=1;end
live_loop :melody do|idx|play deg_seq(         *%w{:A3 3111 6111 5111 4111 3111 3111 3111 4112})[idx];sleep bar/2.0;idx+=1;end
live_loop :beat do  |idx|play_rollinz(deg_seq( *%w{:A2 5555 4444 1111 1111 5555 4444 7777 1111})[idx],-1);sleep bar/4.0;idx+=1;end
live_loop :beat2 do |idx|play_rollinz(deg_seq( *%w{:a2 1111 6666 5555 5555 1111 6666 5555 7777})[idx],1);sleep bar/4.0;idx+=1;end

#play deg_seq(*%w{:a2 541})
#play deg_seq(*%w{:a2 165})