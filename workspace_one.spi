["shaderview","experiments", "log"].each{|f| load "/Users/josephwilk/Workspace/repl-electric/live-coding-space/lib/#{f}.rb"}

live_loop :drums do
  with_fx((knit :none,3, :echo,1, :none,4).tick, phase: 0.25, decay: 1.0) do
    sample Mountain[/subkick/,[0,1]].tick(:s), cutoff: 110
  end
  #  shader(:decay, :iBeat, 5.0, 0.003)
  #  shader(:decay, :iKick, 1.0)
  #  shader(:decay, :iWave, 0.9, 0.0025)
  sleep 4
  shader(:uniform, :iFizzle, rand)
end
_= nil
live_loop :background do
  with_synth :dark_ambience do
    play (ring :Fs2, :Es2).tick, decay: 4.0,
      detune1: 24,
      detune2: -12,
      amp: 8.0, attack: 1.0, cutoff: rrand(80, 100)
  end
  sleep 4
end

live_loop :background do
  sleep 1
  with_synth :dark_sea_horn do
    play (ring :Fs2, :As2, :Ds2).tick(:note),
      cutoff: (ramp *(range 80,100,5)).tick(:again), decay: 1, amp: 1.0
  end
end

live_loop :apeg do
  use_synth :saw
  root = (knit :Fs3, 16, :As3, 16, :Ds3, 16,
          :Fs3, 16, :As3, 16, :Gs3, 16,
          :Fs3, 16, :As3, 16, :Es3, 16,
          :Fs3, 16, :As3, 16, :Cs3, 16
          ).tick(:notes)
  with_transpose(-24){
    with_synth(:dsaw){play (knit root,1, _, 15).tick(:bass), release: 1.5, decay: 2.5, amp: 0.9, cutoff: 60}
    with_synth(:prophet){play (knit root,1, _, 15).look(:bass), release: 1.5, decay: 2.0, amp: 0.8, cutoff: 60}
    if (knit root,1, _, 15).look(:bass)
      #sample Fraz[/coil/,4], amp: 1, cutoff: (ring 70,80).tick(:cu)
    end
  }
  sleep 0.25 * 1
end


live_loop :image do
  with_synth(:prophet){
    #play :As2, decay: 1.8, amp: 1.5, cutoff: 60
  }
  with_synth(:dsaw){
    #play :Fs2, decay: 1,8, amp: 1.5, cutoff: 50, detune: 12
  }
  sleep 2
end


with_fx(:reverb, room: 1.0, mix: 1.0){ |r_fx|
  live_loop :chorus do
    notes = (knit
             chord_degree(1, :fs3, :major)[1..-1], 8,
             chord_degree(3, :fs3, :major)[1..-1], 8,
             chord(:Ds3, "m")[1..-1], 8,

             chord(:Fs3, 'sus4')[1..-1], 8,
             chord(:As3, 'm+5')[1..-1], 8,
             chord(:Ds3, "m7")[1..-1], 8,   #D F A C

             chord(:Fs3, 'sus4')[1..-1], 8,
             chord(:As3, 'm+5')[1..-1], 8,

             chord(:Cs3, :M)[1..-1], 4,
             chord(:Cs3, :maj9)[1..-1],4
             )

    1.times{sleep 0.25}
    with_synth(:hoover)do
      play notes.tick(:h)[0], amp: 0.0
    end

    1.times{sleep 0.25}
    with_synth(:hollow){
      4.times{control r_fx, damp: rrand(0.0,1.0) ; sleep 0.25/4.0}
      play notes.look(:h)[0], amp: (knit 2.0,4, 0.0,4).tick(:amp)*2, release: 0.5, decay: 1.0,
      cutoff: (ramp *(range 60, 130)).tick(:cut), res: (ring 0.98,0.99).tick(:xcut),
      attack: 0.2
      puts note_inspect(notes.look(:h), "CHORD")


      if(notes.look(:h) == chord(:Ds3, "m7")[1..-1])
        cue :lovely
        #sample (knit Frag[/coils/, /F#/,0] ,1,   _,7).tick(:s)
        with_fx(:flanger){
          sample (knit "/Users/josephwilk/Dropbox/repl-electric/samples/Bowed Notes/G#_HarmBow_01_SP.wav" ,1,   _,7,
                  "/Users/josephwilk/Dropbox/repl-electric/samples/Bowed Notes/D#_BowedGuitarNote_01_SP.wav",1,_,7,
                  Mountain[/G#_BowedHarmSoft/,0],1,_,7
                  ).tick(:s), cutoff: 80, amp: 0.15*1
        }
        #   sample (knit Sop[/F#4/,/down/,1] ,1,   _,7).tick(:s)
      end
    }
  end
}



#shader("uniform", :iMesh, 0.0)
shader("uniform", :iCells, 0.0)
shader("uniform", :iStars, 1.0)

#shader("uniform", :iBeat, 3.05)
#shader("uniform", :iBeat, 0.0)