live_loop :go do
#  stop
  tick
  bitsea :A2
  #verb_slice Drip[/effect/].look if spread(1,3).look
  alive light: rand*0.1
  alivecol 0.2
  16.times{tick(:k);
    s=(ing
      [KT[1]] _ _ _  TS[8] _ _ _      K1 _ _ _   _ _ _ _
      K1 _ _ _       _ _ _ _          K3 _ _ _   _ _ _ T1
      K1 _ _ _       %l{TC[6]} _ _ _  K3 _ _ _   _ _ _ T1
      K1 _ _ _       _ _ _ _          K1 _ %l{TC[6]} _   _ _ [F1 0.99] _
      K1 _ _ _       TS[8] _ _ _      K1 _ _ _   _ _ _ _
      K1 _ _ _       _ _ _ _          K3 _ _ _   _ _ _ T1
      K1 _ _ _       %l{TC[6]} _ _ _  K3 _ _ _   _ _ _ T1
      K1 _ _ _       _ _ _ _          K1 _ %e{TC[6]} _   _ _ [F1 0.99] _)
    s.map{|cell| look % 64 == 0 ? s : _}
    kick_machine s.look(:k), def: 8, accent: 1
    dterrain 0.0 if x
    breath 0.0 if x
    sleep 1/8.0
  }
  #sleep 2
end
live_loop :By_the_light_of_the_terminal, sync: :go do
  with_fx :echo, mix: 1*(ring 0.025+rand*0.1,0.055+rand*0.1,0.03,0.02,0.01).look, phase: (ring 1/4.0, 1/8.0).look do
    8.times{tick;
      pp = (ing
        _ _ _ _    _ _ _ _     _ _ _ _    _ _ _ _
        _ _ _ _    _ _ D1 _    _ _ _ _   _ _ _ _
        ).look
      #pp=_
      dust_pat(pp){|accent|
        fuzz = rand(0.05)
        with_fx (ing :slicer,:krush,:bitcrusher,:echo).tick(:pfx), mix: 0.5, phase: 1/4.0, decay: 2 {
          dterrain 0.1
          smp pp, amp: (accent+10.6)*1, attack: 0.0, start: 0.1-fuzz, rate:
          (knit
            -0.25,32,-0.25,32,
            -0.5-fuzz, 1,-0.5,31,
            -0.25-fuzz,1,-0.25,31).look
        }
      }
      s1 = (ing
        _ 5   _ _   [5] _   _ _   _ _  _ _  5 _  _ _
        _ 5   _ _   [5] _   5 _   _ _  _ _  5 _  _ _
        _ 5   _ _   [5] _   _ _   _ _  _ _  5 _  _ _
        _ 5   _ _   [5] _   _ _   5 _  _ _  5 _  _ _
       )
      s2 = (ing
        _ _   _ _   [5] _   _ _   _ _  _ _  5 _  _ _
        _ _   _ _   [5] _   5 _   _ _  _ _  5 _  _ _
        _ _   _ _   [5] _   _ _   _ _  _ _  5 _  _ _
        _ _   _ _   [5] _   _ _   _ _  _ _  5 _  _ _
        )
      s3 = (ing
        _ _   _ _   [5] _   _ _  5  _  _ _  5 _  _ _
        _ _   _ _   [5] _   _ _  5  _  _ _  5 _  _ _
        _ _   _ _   [5] _   _ _  5  _  _ _  5 _  _ _
        _ _   _ _   [5] _   _ _  5  _  _ _  5 _  _ _
        )
      s=(knit s2,16*4,s3,16*4, s1,16*4).look
      s=_
      mt s.look, accent=(line 75, 85, 16*4).look, 100
      mt_cc morph: ((line 0.0, 1.1,16*16*2)+(line 1.1, 0.0, 16*16*2)).look
      s=(ing
        2 _ _ _  5 _ _ _    5 _ _ _      _ _ _ _
        5 _ _ _   _ _ _ _   5 _ [2] 3    _ [5] 5 5
        ).look
      accent=110
      #s=_
      if s
        mt s, accent=70, 75
      end
      if (s=(ing
            [5] _ 5 _ 5 _ 5 _   5 _ 5 _ 5 [5] 5 _
            ).look)
        s=_
#        mt s,accent=(line 85,127,64).look, 120 if s
      end
      sleep 1/8.0
    }
  end
end
