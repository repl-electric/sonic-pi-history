live_loop :start do
  tick

with_fx :hpf, cutoff: 80, mix: 0*(ramp 0, 1, 128).tick(:in) do

  if spread(1,4).look
  #  smp Mountain[/subkick/,[1,1]].tick(:sample), cutoff: 135, amp: 1.0
    if spread(1,64).look
      at do
        sleep 1/8.0*2
        smp Mountain[/subkick/,[1,1]].tick(:sample), cutoff: 135, amp: 0.5
      end
    end
  end
  if spread(1,8).look
 #     smp Dust[/snare/,[2,2]].look, cutoff: 135, amp: 0.7

    if spread(1,16).look
#      smp Dust[/snare/,[8,8]].look, cutoff: 135, amp: 0.7
    else
#      smp Dust[/snare/,[7,7]].tick(:sample), cutoff: 135, amp: 0.4
    end
  end

  if spread(1,2).look
#    smp Frag[/hat/,[0,0,1]].look, rpitch: (line 0,12,32).look, amp: 0.25
    if spread(1,62).look
    at do
      sleep 1/8.0
 #     smp Frag[/hat/,[0,0,1]].look, rpitch: (line 0,12,32).look, amp: 0.25
    end
    end
  end

  s = (knit 1/8.0, 31, 8,0).look

  f2 = spread(7,11).map{|s| s ? :echo : :reverb}
  with_fx(f2.look, phase: 0.25, decay: 2) do
    smp Straw.slice(:Fs3).drop(1).look, amp: 4.0, rpitch:(ring 0).shuffle.look
  end


    if spread(7,11).look
          smp Straw.slice(:Fs3).drop(1).look, amp: 4.0, rpitch:(ring 12, -5,5).tick(:ins)
    end


  f = spread(7,11).map{|s| s ? :pitch_shift : :bitcrusher}
    with_fx(f.look) do

fs = Straw.slice(:Fs3).look

      if fs && (fs[:offset] - fs[:onset]) > 0.1
        x= (knit
          :Fs4,64,:Cs5,64,
          :b4,64, :D5,64).look
        synth :gpa, note:  knit( :Fs4,64,  :Cs5,64,
                                :b4,64,   :fs4,64/2.0, :a4, 64/2.0
                                ).look, amp: 1.0, attack: 0.001, decay: fs[:offset] - fs[:onset], release: 0.001
end

    if s > 1
      smp Straw.slice(:Fs3).look, amp: 4.0, finish_offset: 0.15
    else
      smp Straw.slice(:Fs3).drop(1).look, amp: 4.0, amp: (line 4,8,8).look
    end
    sleep s
    end
    end
end
