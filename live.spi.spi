live_loop :metro do
  tick
  sleep 1
end

live_loop :melo, sync: :metro do
  tick
  score = (knit
    [:A3, 3/4.0],3, [:D3,1],3, [:E3,2/4.0],3,
    [:Fs3,3/4.0],1, [:A3,1],1, [:D3,2/4.0],1,
    [:A3, 3/4.0],1, [:D3,1],1, [:E3,2/4.0],1,
    [:E3, 3/4.0],1, [:Fs3,1],1,[:D3,2/4.0], 1)
  cue(:m) if (look % (score.count-1)) == 0
  3.times{
    sharp s=score.tick, (ring 30,30,30,40,40,40, 50,50,50).look #, cutoff: 0.3

    sleep s[-1]
  }
  sleep 3/4.0
end

#sharp_cc(cutoff: 0.8)
harp_cc(phase: 0.5)

live_loop :kick, sync: :metro do
  tick
  #sync :m
  k1=Frag[/kick/,9]
  if(s=(ring *%W{k1 _ k1 _   _ _ _ _   k1 _ _ _   _ _ _ _
                  k1 _ _ _    _ _ _ _}).look) != _
    puts s
    smp eval(s)
  end

  sleep 1/8.0
end

live_loop :bass, sync: :metro do
  #sync :m
  tick
  bass (ring [:A2,3]).look, 100, sustain: 3, cutoff: 0.25
  sleep 6
end

live_loop :back, sync: :metro do
  tick
  #shader :iMode, 0
    dshader :iMode, 4.0#(ring 1.0, 2.0,3.0).look
    dshader [:iR,:iG,:iB].choose, rand*4
  #sharp (ring [:A3, 12], [:CS4, 12], [:E4, 12], [_, 12], [_,12]).look,10, sustain: 6
  #dshader [:iR,:iB,:iG], rand
  sleep 12
end
