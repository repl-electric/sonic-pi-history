["experiments"].each{|f| load "/Users/josephwilk/Workspace/repl-electric/live-coding-space/lib/#{f}.rb"}
_=nil
hold     = (ring *%w{1  0 0 0 0 0 0 0 0 0   0  1  0   1 0  0}.map(&:to_i))
tranpose = (ring *%w{10 0 0 0 5 0 0 0 0 -12 0 -2 -12 -2 0 -12}.map(&:to_i))
velocity = (ring *%w{100 100 49 100 118 78 110 114 100 127 100 127 115 100 100 100}.map(&:to_i))


live_loop :apeg do
  use_synth :blade
  root = (knit :Fs3, 16, :As3, 16, :Ds3, 16).tick(:notes)
  
  with_fx(:distortion){
  with_fx(:reverb){
    with_transpose(tranpose.tick(:t)){
      play root, attack: 1-(velocity.tick(:v)/100), release: hold.tick(:h) == 1.0 ? 0.8 : 0.5, cutoff: 85
    }
  }
  }

  with_transpose(-24){
    with_synth(:dsaw){
      play (knit root,1, _, 15).tick(:bass), release: 1.5, decay: 2.5, amp: 0.5, cutoff: 80
    }

    with_synth(:prophet){
      play (knit root,1, _, 15).look(:bass), release: 1.5, decay: 2.0, amp: 0.2, cutoff: 80
    }
  }
  sleep 0.25
end

live_loop :chorus do
  sync :apeg
  with_fx(:reverb){
  with_synth(:hollow){
    play :Fs3, amp: (knit 1.0,4, 0.0,4).tick(:amp)
  }
  }
end


live_loop :drums do |d_idx|
  if d_idx % 16 == 0
    sample Fraz[/kick/i,11], amp: 0.5
  end

  with_fx((knit :none, 3, :echo, 1, :none, 4).tick(:fx), decay: 0.2, mix: 0.4){
    sample Fraz[/kick/i,[0,0]].tick(:kick)
  }
  4.times{sync :apeg}
  sample Fraz[/kick/i,1]
  sample Fraz[/snap/i,[0,0,0,0,1,1,1,1]].tick(:snap), amp: 0.2
  4.times{sync :apeg}
  d_idx+=1
end