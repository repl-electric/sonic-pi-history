["instruments","shaderview","experiments", "log"].each{|f| load "/Users/josephwilk/Workspace/repl-electric/live-coding-space/lib/#{f}.rb"}; _=nil;
#load_snippets("~/.sonic-pi/snippets/")
# d[-_-]b # # This is Sonic Pi and live coding music.       #
#   /█\     # We run code which controls synths and samples.#
#  .Π.       #############################################

#                -----------This is the log of activity--------->

#This is where we write our music code. When it flashes pink
#thats me telling it to run our code and change the music
with_fx(:reverb, room: 0.8, mix: 0.5) do
  live_loop :dark_beginnings do
    with_synth :dark_sea_horn do #This is my own synth
      play (ring :Fs1, :as1, :ds1).tick(:notes), decay: 8.01, cutoff: 60, amp: 0.3
    end
    sleep 8
  end
end

live_loop :determinisim do
  #I'm bored of these hats, lets find something different.

  if spread(7,8).tick
    sample Ether[/noise/,[0,1]].tick(:sample), 
      cutoff: rrand(50,60), amp: 0.8
  end
  sleep 0.25 #0.25 of a beat.
end


live_loop :heart do
  #A nice way to turn one drum into many.
  sample Vocals[/breath/, [6,6]].tick(:breath), cutoff: 48, start: rand
  with_fx(:echo, decay: 0.25, phase: 0.25) do
    sample Mountain[/subkick/,[0,0,0,1]].tick(:sample),
      cutoff: range(50,70, 5).tick(:a_cutoff), amp: 0.5
  end
  sleep 1
  with_fx(:reverb, room: 1.0, mix: 0.5, damp: 0.5) do
    with_fx(:bitcrusher, bits: (range 6, 16,1).tick(:bits), mix: 0.2) do
      sample Frag[/snap/,[0,0,0,1]].tick(:sample), cutoff: rrand(60,70), amp: 0.9
    end
  end
  sleep 1
end