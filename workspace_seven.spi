load "/Users/josephwilk/Workspace/repl-electric/live-coding-space/lib/samples.rb"
load "/Users/josephwilk/Workspace/repl-electric/live-coding-space/lib/dsp.rb"
load "/Users/josephwilk/Workspace/repl-electric/live-coding-space/lib/monkey.rb"

_=nil
def note_slices(n, m)
  NoteSlices.find(note: n, max: m, pat: "sop|alto|bass").select{|s| s[:path] =~ /sop|alto/}.take(64)
end

@slices ||= {"Gs2/4" => note_slices("Gs2",1/4.0),"D2/4" => note_slices("D2",1/4.0), "E2/4" => note_slices("E2",1/4.0), "A2/4" => note_slices("A2",1/4.0), "Fs2/4" => note_slices("F#2",1/4.0),"Fs2/8" => note_slices("F#2",1/8.0), "E3/4" => note_slices("E3",1/4.0), "D3/4" => note_slices("D3",1/4.0),"D3/8" => note_slices("D3",1/8.0),"Cs3/4" => note_slices("C#3",1/4.0), "Fs3/8" => note_slices("F#3",1/8.0),"Fs3/4" => note_slices("F#3",1/4.0), "Gs3/4" => note_slices("G#3",1/4.0), "A3/8" => note_slices("A3",1/8.0),"A3/4" => note_slices("A3",1/4.0), "B3/4" => note_slices("B3",1/4.0), "Cs4/4" => note_slices("C#4",1/4.0), "Cs4/8" => note_slices("C#4",1/8.0), "D4/4" => note_slices("D4",1/4.0),"D4/8" => note_slices("D4",1/8.0), "E4/4" => note_slices("E4",1/4.0),"E4/8" => note_slices("E4",1/8.0), "Fs4/4" => note_slices("F#4",1/4.0),"Fs4/8" => note_slices("F#4",1/8.0), "Gs4/4" => note_slices("G#4",1/4.0), "B4/4" => note_slices("B4",1/4.0),"Fs5/4" => note_slices("F#5",1/4.0), "Fs6/4" => note_slices("F#6",1/4.0),"A4/4" => note_slices("A4",1/4.0),"E5/4" => note_slices("E5",1/4.0)}
@slices.values.flatten.each{|f| load_sample f[:path]}
puts @slices.values.flatten.count

#  smp Harp.slice(:Fs3).look, amp: 2, cutoff: (ramp 10, 130, 128).tick(:ram)
module Harp
  def self.slice(n, size: 1/4.0)
    @straw_cache ||= {}
    n = n.to_s.gsub(/s/,"#")
    if !@straw_cache.has_key?(n)
      @straw_cache[n] = NoteSlices.find(note: n, max: size, pat: "Straw").take(64)
    end
    @straw_cache[n]
  end
end

live_loop :doit do
  tick
  if spread(1,4).look
    smp Mountain[/subkick/,1], amp: 2
    if spread(1,128).tick(:sindie)
      at do
        sleep (1/8.0/2.0)
        smp Mountain[/subkick/,0], amp: 0.25
      end
    end
  end
  if spread(1,2, rotate: 1).look
    with_fx :reverb, mix: 0.3, room: 0.8 do
      smp Frag[/hat/,3], amp: 1, rpitch: (ring 0,12,12).tick(:pi)
    end
    if spread(1,32).tick(:sindie)
      at do
        sleep 1/8.0
        smp Frag[/hat/,4], amp: 1.125, rpitch: (ring 0,12,12).tick(:pi)
      end
    end
  end
  if spread(1,8).look
    smp Dust[/snare/,6], amp: 1, rpitch: -12*0, rate: (rand*0.1)+1
  end
  d=(spread 7,11).map{|s| s ? :echo : :reverb}.shuffle
  with_fx  d.look, decay: 1*2, phase: 0.25, mix: 1, distort: (line 0.0, 0.5, steps: 128).look do
    #D
    smp Harp.slice(:Fs3).look, amp: 4.0, rpitch: (ring 0).tick(:inner), cutoff: 100 , cutoff: (ramp *(line 10, 130, steps: 128)).tick(:r53am)
  end
  d=(spread 3,8).map{|s| s ? :pitch_shift : :bitcrusher}.shuffle
  with_fx  d.look, decay: 1, phase: 0.25, mix: 1, distort: (line 0.0, 0.5, steps: 128).look do
    smp Harp.slice(:Fs3).reverse.look, amp: 4.0, rpitch: 0, cutoff: 100
    
  end
  sleep 1/8.0
end

live_loop :chords   do
  sync :doit
  tick
  with_fx :distortion, mix: 0.5 do
    #    synth :hollow, note: chord(:Fs2, :m11).shuffle.choose, decay: 7, attack: 1.0, amp: 0.4
  end
  with_fx :slicer, phase: (ring 0.5).tick(:as) do
    #synth :dark_sea_horn, note: (ring :FS1, :D1, :E1).look, cutoff: 40, decay: 6, attack: 1.0
  end
  sleep 8
end
