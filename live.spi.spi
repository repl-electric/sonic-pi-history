live_loop(:metro)do
  tick;
  cue("16") if look % 16.0 == 0
  cue("18") if look % 18.0 == 0
  cue("32") if look % 32.0 == 0
  cue("64") if look % 64.0 == 0
#  midi_start if tick == 0
  #midi_clock_beat 1.0#, port: :iac_bus_1
  #smp Mountain[/subkick/,1]
  sleep 1.0
end

live_loop :test, sync: :metro do
  tick
#  use_real_time
#  midi_note_on (scale :A2, :major, octaves: 3).shuffle.look, port: "*"
  sleep 1/4.0
end

harp_cc phase: 0.5

live_loop :music, sync: :metro do
  tick
  #sync "16"
  use_real_time
  harp (ring [:A3,3], [:D3,3], [:B3, 3],
            [:Fs3,3], [:A3,3], [:D3, 3]
        ).look, 10.0, sustain: 3.0, port: :iac_bus_1, channel: 9
  #bass :E2, sustain: 3
  #harp_cc phase: rand
  sleep 3
  #midi_pitch_bend (line 0,127).look, port: :iac_bus_1, channel: 3
  shader [:iR,:iG,:iB].choose, rand*10
  #shader :iMode, (ring 0.0,1.0,2.0,3.0,4.0).look

  comment do
    midi_cc 65,  127*0  # port
    midi_cc 5,   127*0  # port
    midi_cc 114, 127*1 #midi clock

    midi_cc 111, 127.0*0
    midi_cc 108, 12.0*0
    midi_cc 109, 127.0*0
    midi_cc 112, 127.0*0
    midi_cc 113, 127.0*0
  end
    #midi_cc (line 0, 127).look, 127,  port: :iac_bus_1, channel: 9
    #midi_cc 1, (line 0, 127).look,  port: :iac_bus_1, channel: 9
end


#with_fx :reverb do
  live_loop :pat, sync: :metro do
    #sync '18'
    tick
    #sync "16"
    c1 = Dust[/clap/,1]
    k1,k2,k3 = Frag[/kick/,9], Mountain[/subkick/,0], (knit Dust[/kick/,24],3, Dust[/kick/,25],3).look
    s=(ring *%W{
     k2 _ _ _   k1 _ _ _   k1 _ _ _
     k1 _ _ _   k1 _ _ _   k1 _ _ _

     k2 _ _ _   k1 _ _ _   k1 _ _ _
     k1 _ _ _   k1 _ _ _   k1 _ _ _

     k2 _ k2 _  k1 _ _ _   k1 _ _ _
     k1 _ _ _   k1 _ _ _   Frag[/kick/,3] _ k2 _
  }).look

    s2=(ring *%W{
     k2 _ _ _   _ _ _ _   k1 _ _ _
     _ _ _ _   _ _ _ _   _ _ _ _

     k2 _ _ _   _ _ _ _   k1 _ _ _
     _ _ _ _   _ _ _ _   _ _ _ _

     k2 _ _ _  _ _ _ _   k1 _ _ _
     _ _ _ _   _ _ _ _   Frag[/kick/,3] _ k2 _
  }).look

  #2*(line 0.8, 1.0, 12*6).look
   smp eval(s), amp: (knit 1.0, 4, 0.8,4, 0.9,4, 0.85,4).look , v: 0.2, attack: (line 0.0, 0.05,12*12).look

  p,p2 = *Dust[/perc/, /con/]
#  puts p
    s=(ring *%W{
p _ _ _   _ _ p _
_ _ p _
_ _ p _   _ _ p _
_ _ p _

p _ _ _   _ _ p _
_ _ p _
_ _ p _   _ _ p _
_ _ p _
}).look
  smp eval(s), cutoff: (line 110, 120, 6*4).look

    c = MagicDust[/HI_/, [54,55]].look
    if (s=(ring *%W{
_ _ _ _    _ _
_ _ _  _ _ _
_ _ _  _ _ _
_ _ _  _ _ _
}).look) != _
      smp eval(s)
    end

  c1 = MagicDust[/HI_/].look#, Dust[/clap/].look
  s=(ring *%W{
 _ _ _ _   c1 _ _ _   _ _ _ _   c1 _ _ _
 _ _ _ _   c1 _ _ _   _ _ _ _   c1 _ _ _

 _ _ _ _   c1 _ _ _   _ _ _ _   c1 _ _ _
 _ _ _ _   c1 _ _ _   _ _ _ _   c1 _ _ _
}).look
#  smp eval(s), amp: 2.0

 # = spread(7,11).map{|s| s ? :hit : :miss}
  s=(ring *%W{_ _ _ _   c2 _ _ _}).look
 # smp eval(s), cutoff: (line 80, 120, 128).look

  h,h2 = Frag[/hat/,8],Frag[/hat/,7]

  s=(ring *%W{
_ _ h _                     _ _ h _
_ _ h _                     _ _ h _
_ _ h {path:h2,amp:0.25}    _ _ h _
_ _ h _                     _ _ h _
_ _ h _                     _  _ h _

}).look
#  smp eval(s), cutoff: (line 110, 127,32).look

  sleep 1/8.0
end
#end
