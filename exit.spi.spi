D4=:d4;E4=:e4;FS4=:Fs4;GS4=:Gs4;Cs4=:Cs4;A4=:A4;B4=:B4;D3=:d3;E3=:e3;FS3=:Fs3;GS3=:Gs3;Cs3=:Cs3;A3=:A3;B3=:B3;D2=:d2;E2=:e2;FS2=:Fs2;GS2=:Gs2;Cs2=:Cs2;A2=:A2;B2=:B2;C2=:c2;C3=:c3 #__nonsave__
REST=[[[_, 0.25]], 2];use_bpm 63.5
live_loop :Fall_out_of_your_screen, sync: :unsyncable do
  tick
  live_loop :Within_the_letters{stop}
  score =  (ing  #15.25
    #[[[:b3 2]  [:d5 2]   [:fs3 2]]           2]                  REST
    #[[[:fs3 2] [:a5 2]   [:cs3 2]]           2]                  REST
    #[[[:a3 2]  [:b4 2]   [:e5 2]]            2]
    [[[:d3 2]  [:fs5 2]  [:a3 2]  [[:e4 2] [:e4 2]].choose] 2]  REST
    [[[:e2 2]  [:gs5 2]  [:b3 2]]  2]  REST
#    [[[:b2 2]  [:d5 2]   [:fs4 2] [_ 2]]  2]                  REST
    [[[:e4 2] [:A2 2]   [:Cs4 2] ]  2]                          REST
    )
  cue :kernel_panic
  s=score.look
  c=s[0];zzz=s[-1]

  bistable c[0][0], sus: 12 if spread(1,1).look
  if spread(1,6).look
    #rev :b5, 1
    #eek :Gs3, 10
  end
  #rev :a6, 15, sus: 12
  if !c[0][0]
    #eek (ing :e4 :gs4 :e4 :b4 _ _).look, (ing 100 120).look(:missing), sus: 3.0, at: 0.0, mod: 0.0
  end

  #with_transpose -12 {cpu2 c[1], 60, sus: 2 }

  c.each_tick(:inner){|n|
    qbitsea n[0],2.0*(ing 80 70 85 70).look(:inner), sus: ((n[-1])*1)+0.5, mode: 0, cutoff: 1.0, phase: 0, comp: 0
  }

  pf=0.2
  i=(method :cpu1)
  i.call(c[0], 60*pf, sus: 4)
  i.call(c[1], 50*pf, sus: 4)
  i.call(c[2], 55*pf, sus: 4)
  i.call(c[3], 70*pf, sus: 2)
  i.call(c[4], 30*pf, sus: 8)
  i.call(c[5], 30*pf, sus: 8)

  null root(c), 127*1.0, mode: 1, sus: s[-1]
  8.times{tick(:in2);
    cpu1 (ing
          :a5 _ :a4 _    _   :b5  :a4 _
          :a5 _ :a4 _    _   :b5  :a4 _
          :a5 _ :fs5 _   _   :fs5 :a4 _
          :a5 _ :e5 _    _   :cs6 :a4 _
          :a5 _ :a4 _   :e5  :b5  :a4 _
          :a5 _ :a4 _    _   :b5  :a4 _
          :a5 _ :a4 _    _   :b5  :a4 _
          :a5 _ :a4 _    _   :b5  :a4 _
          :a5 _ :a4 _    _   :b5  :a4 _
          :a5 _ :a4 _    _   :b5  :a4 _
          :a5 _ :a4 _    _   :b5  :a4 _
          :a5 _ :a4 _    :e6 :b5  :a4 _
          ).look(:in2), (ing 90 90 80 80 70 70 60 60).look(:in2)*0
    sleep zzz/8.0
  }
end
