‚ô•Ô∏è,‚ò†Ô∏è=Straw
üêø=@slices
shader :shader, "wave.glsl", "rope.vert", "tri_lines", 100000
shader :iVertexCount, 1000000
shader :iX, 1.0
shader :iY, 1.0


shader :iWave, 8.0
live_loop :live do
  with_fx :none, mix: 0 do
    tick

    if spread(1,4).look
      shader :decay, :iLineMode, rand(200.0)
      shader :decay, :iBeat, rand*4, 0.001
 #     smp Mountain[/subkick/,[0,0]].tick(:sample), cutoff: 100, amp: 1.0
      if spread(1, 64).look
        at do
          sleep (1/8.0)*2
#          smp Mountain[/subkick/,[0,0]].tick(:sample), cutoff: 135, amp: 1.0
        end
      end
    end

    if spread(1,8).look
      smp Dust[/snare/,[6,6]].tick(:sample), cutoff: 135, amp: 1.0
      if spread(1,16).look
        shader :iR, rand*2
        shader :iG, rand*2
        shader :iB, rand*2
        smp Dust[/snare/,[1,1]].tick(:sample), cutoff: 80, amp: 1.0
      else
        smp Dust[/snare/,[2,2]].tick(:sample), cutoff: 135, amp: 1.0
      end
    end

    if spread(1,2).look
      smp Frag[/hat/,[0,1]].tick(:sample2), cutoff: 135, amp: 0.5, rpitch:  line(0, 12,16).look
      at do
      if spread(1,32).look

        sleep 1/8.0*1
        smp Frag[/hat/,[2,3]].tick(:sample3), cutoff: 135, amp: 0.5
        end
      end
    end




  with_fx(spread(7, 11).map{|s| s ? :reverb : :slicer}.look) do
    smp ‚ô•Ô∏è .slice(:Fs3).reverse.take(32).look, amp: 4, cutoff: 90, phase: 0.25
  end

  with_fx(spread(7, 11).map{|s| s ? :pitch_shift : :bitcrusher}.look) do
    smp ‚ô•Ô∏è .slice(:Fs3).take(32).look, amp: 4, cutoff: 90
  end

  sleep 1/8.0
end
end
