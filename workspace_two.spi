live_loop :stars do
#sync :whole
  with_synth(:plucked){
    with_fx(:reverb) do |r_fx|
      notes = (knit chord(:As3), 1, chord(:Fs3, 'sus2', invert: 1), 1, chord(:Fs3, 'M', invert: 0), 1).tick
      f =  play notes, release: 1.0,   attack: 0.01, decay: 2.0, amp: 0.2
      f =  play notes, release: 32.0, attack: 1.0, decay: 64.0, amp: 1.0, cutoff: 120
   4.times{ 
        sleep 1.0
        control r_fx, dry: rrand(0.0,1.0)}
end}
end

live_loop :bass do
sync :stars
  with_synth(:growl){
    notes =    (knit :As2,1, :Fs2,1, :Cs2, 1).tick
    play notes, release: 1.0, amp: 0.2, decay: 3.0
    with_synth(:beep) do
      with_transpose(-12) do
        play notes, releae: 0.1, attack: 0.01
      end
    end
  }
  sleep 4.0
end

live_loop :melody do
with_fx(:lpf, cutoff: 80) do
  sync :stars
  16.times{
      apeg = (stretch 
              (chord :Fs3, "sus4", invert: -1),  1,
              (chord :Fs3, "M",      invert: 0),        1,
              (chord :Fs3, "sus4", invert: 0)  , 1,
              (chord :Fs4, "M", invert: -2)  , 1,
              ).tick

      with_fx(:echo) do
        with_fx(:bitcrusher, bits: (ring 4,10).tick(:bits)) do
        with_synth(:beep){
          play apeg, attack: 0.01, cutoff: 80, release: 0.1, amp: 0.8
        }
      end
      end
      sleep 0.25
  }
end
end

live_loop :drums do
  sync :stars
  with_fx((knit :reverb, 3, :echo, 1).tick, decay: 8.0 ) do
    sample Mountain[/subkick/i,2..3].tick(:s), amp: 1.0
  end
end

live_loop :cracklin do
  sample_and_sleep Mountain[/cracklin/i, 0], rate: 0.9, amp: 0.2
end