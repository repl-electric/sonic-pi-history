with_fx :none, mix: 0 do
  live_loop :pat, sync: :metro do
    #stop
    #sync '18'
    tick
    #sync "16"
    t1 = CineAmbi[/One shots/,/tom/,2]
    k2,k1,k3 = Frag[/kick/,9], Mountain[/subkick/,0], (knit Dust[/kick/,24],3, Dust[/kick/,25],3).look
    k4 = Frag[/kick/,3]
    s=(ring *%W{
     k2 _ _ _   k1 _ _ _     k2 _ _ _   k1 _ _ t1
     k2 _ _ _   k1 _ _ _     k2 _ _ _   k1 _ _ _
     k2 _ _ _   k1 _ _ _     k2 _ _ _   k1 _ _ _

     k2 _ k2 _  k1 _ _ _     k2 _ _ _   k1 _ _ _
     k2 _ _ _   k4  _ k2 _
  }).look

    s1=(ring *%W{
     k2 _ _ _   _ _ _ _   k1 _ _ _
     _ _ _ _   _ _ _ _   _ _ _ _

     k2 _ _ _   _ _ _ _   k1 _ _ _
     _ _ _ _   _ _ _ _   _ _ _ _

     k2 _ _ _  _ _ _ _   k1 _ _ _
     _ _ _ _   _ _ _ _   Frag[/kick/,3] _ k2 _
  }).look

    s2=(ring *%W{
     k2 _ _ _   _ _ _ _   _ _ _ _
     k1 _ _ _   _ _ _ _   _ _ _ _

     k2 _ _ _   _ _ _ _   _ _ _ _
     k1 _ _ _   _ _ _ _   _ _ _ _

     k2 _ _ _   _ _ _ _   _ _ _ _
     k1 _ _ _   _ _ _ _   Frag[/kick/,3] _ k2 _
  }).look

    sidechain if eval(s) && spread(1,4).look
    smp eval(s), amp: 0*(knit 0.8,4, 0.6,4, 0.7,4, 0.6,4).look , v: 0.2, attack: (knit 0.0,12, 0.02,4, 0.0,8).look, cutoff: 100
    if s!="_" && spread(1,8+4).look
      if spread(1,32).look
        at do
          smp Analog[/17 /].tick(:echo), amp: 0.5
          sleep 0.25
        #  smp Analog[/17 /].tick(:echo), amp: 0.3
        end
      else
       # smp Analog[/17 /].tick(:echo), amp: 0.5
      end
    end

    p=Dust[/perc/, /conga/] #MagicDust[/perc/,/stone/,[4..8]].look #*Dust[/perc/, [7,7]]

#    p= Dust[/perc/, [7,7]]
    #p=MagicDust[/perc/,/stone/,[4..8]].look
    #p=Analog[/click/].look
    #  puts p
    s=(ring *%W{
p _ _ _   _ _ p _