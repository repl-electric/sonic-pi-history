camlogo logo: 1.0, crazy: 1.0, off: 1.0
#bitsea_on :CS4
bitsea_cc motion: 0.10  #╟▓▓▓▓▓▓▓▓▓▓▒░╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╢
bitsea_cc octave: 0.56  #╟▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒░╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╢
#bitsea_cc formant: 0.00 #╟▒░╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╢
electric
invcol 1.0

#null :A2
#focus
live_loop :fall_into_your_screen, sync: :unsyncable do; tick
  score=(ing
    [:a2, :cs4, :e3], Zz,
    [:cs2, :e4, :gs3], Zz,
    ).look
  score.each_tick(:in){|n|
    bitsea n, 1.0*(ing 80, 70, 85, 70,).look(:in), mode: 0, cutoff: 1.0, sus: 2.5
  }


  #smp Mountain[/subkick/,0]
  sleep 1
  sleep 1
end

live_loop :by_the_light_of_the_terminal, sync: :unsyncable do
  with_fx :echo, mix: (ring 0.025+rand*0.1,0.055+rand*0.1,0.03,0.02,0.01).look, phase: (ring 1/4.0, 1/8.0).look do
    8.times{
      tick
      pp=(ing
        _, _, _, _,    _, _, _, _,    _, _, _, _,   _, _, _, _,
        _, _, _, _,    _, _, D1, _,    _, _, _, _,   _, _, _, _,
        ).look
      if pp
        dterrain rand*0.9
      end
      smp_dust(pp)
      mt mt_pat.look.look, accent=(line 80, 95, 16*4).look, 100
      mt_cc morph: ((line 0.0, 1.1,16*16*2)+(line 1.1, 0.0, 16*16*2)).look
      s=(ing
        2, _, _, _,  5, _, _, _,    5, _, _, _,      _, _, _, _,
        5, _, _, _,   _, _, _, _,   5, _, [2], 3,    _, [5], 5, 5,
        ).look
      mt s, accent=(line 75, 85, 16*4).look, 100
      s=strpat("5p5p5p5p 5p5p5[5]5p")
      mt s.look,accent=(line 85,127,64).look, 120



      sleep 1/8.0
    }
  end
end

live_loop :its_all_just_text_in_a_file, sync: :unsyncable do tick
  # p1 = spread(7,11)
  # p2 = spread(3,8)
  # p3 = spread(1,16)
  # p = (ing p1, p2, p3,).shuffle

  kick_machine k=(ing
    [KT[1]], _, _, _,  TS[8], _, _, _,  K3, _, _, _,   _, _, _, _,
    K1,    _, _, _,   _, _, _, _,      K3, _, _, _,   _, _, _, _,
    K1,    _, _, _,   %l{TC[6]}, _, _, _,      K3, _, _, _,   _, _, _, _,
    K1,    _, _, _,   _, _, _, _,      K3, _, %l{TC[6]}, _,   _, _, _, _,

    K1,    _, _, _,  TS[8], _, _, _,  K3, _, _, _,   _, _, _, _,
    K1,    _, _, _,   _, _, _, _,      K3, _, _, _,   _, _, _, _,
    K1,    _, _, _,   %l{TC[6]}, _, _, _,      K3, _, _, _,   _, _, _, _,
    K1,    _, _, _,   _, _, _, _,      K3, _, %l{TC[6]}, _,   _, _, _, _,
    ).map{|c| look % 16 == 0 ? c : _}.look, def: 8, accent: 1

  no{
    if k && spread(1,64).rot(0).look
      bitsea :fs4, sus: 4.0
    end
  }



#  128.times{
#    tick
#    qbitsea :A2,  sus: 0.125 if p[0].look
#    qbitsea :cs3,  sus: 0.125 if p[1].look
#    qbitsea :e3, sus: 0.125 if p[2].look
  sleep 1/8.0
#}
end

live_loop(:unsyncable) do; sleep 1.0 end
