["support", "soprano", "samples"].each{|f| require "/Users/josephwilk/Workspace/repl-electric/sonic-pi/lib/#{f}"}

bar = 1.0/2.0
live :timer do
  cue :circle
  sleep bar
  sleep bar
end

live :d do |n|

  with_fx :lpf, cutoff: 100 do
  sync :circle
  sample :drum_bass_soft
  sleep bar
  if n % 32 == 0 
  with_fx :reverb do
    sample :drum_bass_soft
    sleep bar/4.0
    sample :drum_cymbal_pedal
    sleep bar/4.0
    sample :drum_bass_soft
    sleep bar/4.0
    sample :drum_cymbal_pedal
    sleep bar/4.0   
  end  
  elsif n % 16 == 0
    sample :drum_cymbal_pedal
    sleep bar/4.0
    sample :drum_bass_soft
    sleep bar/4.0
    sample :drum_cymbal_pedal
    sleep bar/4.0
    sample :drum_bass_soft
    sleep bar/4.0   
  else
    sample :drum_cymbal_pedal
    sleep bar
  end
  end
end

live_loop :beep do
  with_fx :echo, phase: bar/[1.0,2.0,4.0].choose do
  with_fx :reverb do
  use_synth_defaults attack: 0.05, release: 0.05
  sync :circle
  play degree(3, :D3, :major)
  play degree(1, :D3, :major)
  sleep bar
  sleep bar
  play degree(2, :D3, :major)
  sleep bar
  sleep bar
  play degree(3, :D3, :major)
  sleep bar
  play degree(3, :D3, :major)
  sleep bar
  sleep bar
  x = [8,7].choose
  play degree(x, :D3, :major)
  play degree(5, :D3, :major)
  sleep bar
  play degree(x, :D3, :major)
end
end
end

live :stars do |n|
use_synth :pretty_bell
  sync :circle
  with_fx :reverb do
  with_fx :echo, phase: bar/2.0 do
    play [:D2].choose
    sleep bar
    play [:D2].choose
    sleep bar/2.0

  if n % 32 == 0
    play [:D2].choose
    sleep bar/2.0
    play [:D2].choose
    sleep bar

  else
    play [:C2].choose
    sleep bar/2.0
    play [:C2].choose
    sleep bar
    end
  end
  end
end