dur = sample_duration :loop_compus
bar = dur / 4
quart = dur / 16

n=0
live_loop :drums do
cue :kick
  sample :drum_bass_hard
  sample :loop_amen, rate: [1/2.0,1.0].choose if rand < 2
  sample :loop_amen
  sample :loop_industrial, amp: 0.25
  
  if(n%2 == 0)
    cue :hit
    with_fx :bitcrusher, bits: 4+n%7 do
    sample :loop_amen
    end
  end
  
  sleep sample_duration :loop_amen
  n+= 1
end

live_loop :thing do
    sample :sn_dolf
    sync :hit
    sample :loop_industrial
    sync :kick
    with_fx(:reverb, room: 10) do
      sample :loop_industrial
    end
end

define :beats do
  sync :kick
  with_fx :echo, phase: quart * 3, decay: dur, mix: 0.6 do
    # make sure only one of the following 3 lines is active
    # (uncommented) at a time
    #sample :loop_compus, rate: 0.5
    #sample :loop_compus, rate: 1
    sample :loop_compus, rate: [0.25, 0.5, 1, 1, 1].choose if rand < 0.9
  end
end

define :stacks do
  use_synth :supersaw
  vol = 0.92
  with_fx :reverb, room: 0.9 do
    with_fx :slicer, phase: quart do
      sync :kick
      play_chord [[:C2, :Eb3, :Ab4],[:D2, :F3, :Ab4]].choose,
        cutoff: rrand(100,130), pan: -0.25,
        amp: vol, env_curve: 7, decay: bar, release: bar
    end
    sleep bar * 2
    with_fx :slicer, phase: quart do
      play_chord [[:C3, :Eb3, :G3],[:Bb2, :Eb3, :G3]].choose,
        cutoff: rrand(100,130), pan: 0.25,
        amp: vol, env_curve: 7, decay: bar, release: bar
    end
  end
end