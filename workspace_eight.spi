bar = 1/2.0
quart = 2*bar

live_loop :schedule do
  cue :start
  7.times do
    cue :bar
    sleep 2
  end
end

def say(words)
  sync :bar
  with_fx :reverb, room: 100 do
  with_fx :lpf do
  use_synth :dark_sea_horn
  t = scale(:a1, :major_pentatonic, num_octaves: 2).shuffle
  notes = words.strip.split("").map(&:ord).map{|n| t[n%t.length]}
  notes.map{|n| if n.chr == " "
                  play n, release: 6, attack: 3
                  sleep 4
                else
                  play n, release: 4.0, attack: 2
                  sleep 2.0
                end
           }
end end end

live_loop :poem do
with_fx :level, amp: 0.6 do
say <<-FOREST
Tiger tiger burning bright
FOREST
end
end

live_loop :drums do
  use_synth :beep
  sync :bar
  play :A1
  #sleep 1
end

live_loop :dark do
  use_synth :dark_ambience
  sync :bar
  play [:A2].choose, amp: 1
  #sleep 1
end

live_loop :drums do
  use_synth :growl
  sync :bar
  play degree(1, :A3, :major), amp: 1, release: 1
  #sleep 1
end


define :beeper do |note, direction, room_size, cutoff, detune_factor1, detune_factor2|
  use_synth :mod_fm  #:mod_fm # sample v_s, amp: 90
  use_synth_defaults detune: 0.0, sustain_level: 0.20, res: 1, env_curve: 7 ,sustain: 1.0, attack: 0.01, decay: 0.15, amp: 1.0, release: 0.5, attack_level: 0.8, mod_phase: 2
  #with_fx :reverb, room: 0.5+0.5*Math.sin(note), mix: 0.5 do

  with_fx :reverb, mix_slide: 2 do |r|
    with_fx :lpf, cutoff: cutoff, cutoff_slide: 20 do |c|
      with_fx :distortion, distort: 0.1, cutoff: 90 do |d|
        n_cut = rrand(30,cutoff);
        n_mix = 0.4
        control(c, cutoff: n_cut);
        7.times do |n|
          control(r, room: 0.1, mix: n_mix) ; control(d, distort: 0.5); play note, attack: 0.001,  pan: 0.8*direction, detune: detune_factor1
          sample :elec_soft_kick, rate: 1, start: 0.1

          sleep bar/2
          control(r, room: 0.3, mix:  n_mix); control(d, distort: 0.25); play note, attack: 0.001, pan: 0.7*direction, detune: detune_factor1
          sample :elec_soft_kick, rate: 1, start: 0.1

          n_cut += cutoff/(4*7); control(c, cutoff: n_cut);

          sleep bar/2
          control(r, room: 0.8, mix:  n_mix); play note, attack: 0.005, pan: 0.6*direction, detune: detune_factor2
          sample :elec_soft_kick, rate: 1, start: 0.1

          sleep bar/2
          control(r, room: 1.0, mix:  n_mix); control(d, distort: 0.0); play note, attack: 0.005,  pan: 0.5*direction, detune: (detune_factor2+(n*0.001))
          sample :elec_soft_kick, rate: 1, start: 0.1

          sleep bar/2
          n_mix-0.05 unless n_mix < 0.2
        end
        sleep bar/2
      end
    end
  end
end

@cutoff = 100
@direction = 1
room_size = 0

live_loop :beep do
with_fx :level, amp: 1 do
  #  sync :bar
  #-10.0, -5.0
  # degree(6, :A2, :major)

  #n = [degree(4, :A3, :major)].choose
  n =  [degree(4, :A2, :major)].choose #fm

  #sync :start

  4.times do
    @direction = rand_i(-1..1)

    sync :bar
    beeper n, @direction, 1, 100, 0, 0.001
    room_size += 1
  end
end
end

live_loop :vio_dark do
with_fx :level, amp: 1.0 do
sync :start
with_fx :echo do
with_fx :reverb do
a4_long_s = "/Users/josephwilk/.overtone/orchestra/violin/violin_A4_very-long_decrescendo_arco-normal.wav"
#sample a4_long_s, amp: 1, rate: 1.0
sample a4_long_s, amp: 1, rate: 1.0
sleep sample_duration(a4_long_s)
end
end
end
end

live_loop :beep2 do
with_fx :level, amp: 1 do

  #  sync :bar
  #-10.0, -5.0
  # degree(6, :A2, :major)

  #n =  [degree(6, :A3, :major)].choose
  n =  [degree(1, :A2, :major)].choose #fm

  #sync :start

  4.times do
    sync :bar
    beeper n, @direction == -1 ? 0 : -1, 1, 90, 0, 0.01
    room_size += 1
  end
end
end