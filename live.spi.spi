‚ô•Ô∏è,‚ò†Ô∏è=Straw
üêø=@slices
shader :shader, "wave.glsl", "/Users/josephwilk/Workspace/c++/of_v0.9.4_RC1_osx_release/apps/myApps/shaderview/bin/data/worm.vert", "tri_strip", 100000
shader :iStarMotion, 0.8
shader :iSpaceLight, 0.4
shader :iStarLight, 0.8
shader [:iR, :iB, :iG], 4.0
shader :iForm, 1.0
shader :iMotion, 0.01
shader :iSize,1.1
shader :iDistort, 1.0
shader :iWave, 2.0

 def spin
   #shader :decay, :iCircleP, 1, 0.00001 #rand
 end


def smp(*args)
  sample_thing = args.first
  if sample_thing
    smp_name = if sample_thing.is_a?(Hash)
      sample_file = sample_thing[:path]
      if sample_thing[:onset] && sample_thing[:offset]
        start = ratio_on(sample_thing) + (args.last[:start_offset] || 0)
        fini = ratio_off(sample_thing) + (args.last[:finish_offset] || 0)
      else
        start = 0
        fini = 1
      end
      options = {start: start, finish: fini}
      options = if sample_thing.keys.length > 1
        options.merge(args.last)
      else
        options
                end
                 options.delete(:path)
                 options.delete(:filename)
                 options.delete(:sample_id)
                 options.delete(:collection)
                 options.delete(:note)
                 options.delete(:octave)
                 options.delete(:perc)
      args=([sample_file] + [options])
                 puts options
                 #sample (*([sample_file] + [options]))
      sample *args
      sample_file
    else
      sample(*args)
      sample_thing
    end
    if smp_name =~ /kick/
      shader :decay, :iBeat, 1.0, 0.001
    end
  end
end


live_loop :slices do
  with_fx :none, mix: 0 do
    tick
     f =‚ô•Ô∏è.slice(:Fs3).look
     smp f

     sleep 8
  end
end
