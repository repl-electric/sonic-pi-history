live_loop :melody do
  tick
  s = nil
  3.times{
   #s = (ring 3/4.0, 1, 2/4.0).tick(:note_length)
   s = (knit 

             [:Fs3,1],1, [:A3,1],1, [:Cs3,1],1,      #3
             [:A3,1],1,  [:Cs3,1],1, [:D3,1],1,      #3
             [:E3,1],1,  [:Fs3,1],1, [:Cs3,1],1,      #3

#             [:A3,0.25],1, [:E3,0.125],1, [:Fs3,0.125],1, [:E3, 0.125],1
# D 
   
#B D F
#C E G
#F A C
#G B D

#I ii, iii, IV, V, vi, viio


          #   [:Fs3,3/4.0],1, [:A3,1],1, [:D3,2/4.0],1,      #3
           #  [:A3, 3/4.0],1, [:D3,1],1, [:E3,2/4.0],1,      #3
            # [:E3, 3/4.0],1, [:Fs3,1],1,[:D3,2/4.0], 1,     #3
            # [_,   3/4.0],1, [:A2,1],1, [:B2,2/4.0 + 3],1,  #6  #+ 3/4.0 + 1 + 2/4.0
          
         #    [:A3, 3],1, [:D3,3],1, [:E3,3],1,   
         #    [:Fs3,3/4.0],1, [:B3,1],1, [:A3,2/4.0],1,    
         #    [:A3, 3/4.0],1, [:D3,1],1, [:E3,2/4.0],1, 
         #    [:E3, 3/4.0],1, [:Fs3,1],1,[:D3,2/4.0], 1,
         #    [_,   3/4.0],1, [:A2,1],1, [:B2,2/4.0 + 3],1,
             ).tick(:no)
   midi s[0], (ring 20,20,20, 30,40,40, 40,60,80).look,  port: :iac_bus_1, channel: 4,
    sustain: s[1]*9

puts s

@notes += s[1]
   sleep s[1]*10
  }
if s[-1] != 2/4.0 + 3
@notes += 3/4.0
   sleep 3/4.0
end
puts "mel:#{@notes}"
end


#midi :A1, port: :iac_bus_1, channel: 4,sustain: 0

